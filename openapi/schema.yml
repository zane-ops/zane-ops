openapi: 3.0.3
info:
  title: ZaneOps API
  version: 0.0.1-alpha
  description: "\n\n## Overview\n\nZaneOps is a self-hosted, open source platform\
    \ as a service for hosting static sites, web apps, \ndatabases, CRONS, Workers\
    \ using docker swarm as the engine.\n\n## Errors\n\n### 405 Method Not Allowed\n\
    \nThis is returned when an endpoint is called with an unexpected http method.\
    \ For example, if updating a user requires\na POST request and a PATCH is issued\
    \ instead, this error is returned. Here's how it looks like:\n\n```json\n{\n \
    \ \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"method_not_allowed\"\
    ,\n      \"detail\": \"Method “patch” not allowed.\",\n      \"attr\": null\n\
    \    }\n  ]\n}\n```\n\n### 406 Not Acceptable\n\nThis is returned if the `Accept`\
    \ header is submitted and contains a value other than `application/json`. Here's\
    \ how the\nresponse would look:\n\n```json\n{\n  \"type\": \"client_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"not_acceptable\",\n      \"detail\"\
    : \"Could not satisfy the request Accept header.\",\n      \"attr\": null\n  \
    \  }\n  ]\n}\n```\n\n### 415 Unsupported Media Type\n\nThis is returned when the\
    \ request content type is not json. Here's how the response would look:\n\n```json\n\
    {\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_acceptable\"\
    ,\n      \"detail\": \"Unsupported media type “application/xml” in request.\"\
    ,\n      \"attr\": null\n    }\n  ]\n}\n```\n\n### 500 Internal Server Error\n\
    \nThis is returned when the API server encounters an unexpected error. Here's\
    \ how the response would look:\n\n```json\n{\n  \"type\": \"server_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"error\",\n      \"detail\": \"A server\
    \ error occurred.\",\n      \"attr\": null\n    }\n  ]\n}\n```\n"
paths:
  /api/_proxy/logs/:
    get:
      operationId: _proxy_logs_list
      summary: Get caddy proxy logs
      parameters:
      - in: query
        name: content
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: level
        schema:
          type: string
          enum:
          - ERROR
          - INFO
        description: |-
          * `ERROR` - Error
          * `INFO` - Info
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - _proxy
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_proxyLogsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimpleLogList'
          description: ''
  /api/archived-projects/:
    get:
      operationId: getArchivedProjectList
      summary: List archived projects
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -archived_at
            - -slug
            - archived_at
            - slug
        description: |-
          Ordering

          * `slug` - name
          * `-slug` - name (descending)
          * `archived_at` - Archived at
          * `-archived_at` - Archived at (descending)
        explode: false
        style: form
      tags:
      - archived-projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArchivedProjectListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArchivedProjectList'
          description: ''
  /api/auth/login/:
    post:
      operationId: login
      description: Authenticate User, what is returned is a cookie named `sessionid`
        that will be used for authentication of the next requests.
      summary: Login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
          description: ''
        '302':
          description: No response body
  /api/auth/logout/:
    delete:
      operationId: logout
      summary: Logout
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/auth/me/:
    get:
      operationId: getAuthedUser
      description: Get current authenticated user.
      summary: Get current user
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthedUserErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthedSuccessResponse'
          description: ''
  /api/csrf/:
    get:
      operationId: getCSRF
      description: CSRF cookie endpoint for retrieving a CSRF token before doing mutative
        requests (`DELETE`, `POST`, `PUT`, `PATCH`).You need to pass the cookie named
        `csrftoken` to all requests alongside a `X-CSRFToken` with the value of the
        token.
      summary: Get CSRF cookie
      tags:
      - csrf
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCSRFErrorResponse400'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '401':
          description: No response body
  /api/docker/check-port/:
    post:
      operationId: checkIfPortIsAvailable
      description: Check If Port is available on host machine
      summary: Check Port
      tags:
      - docker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIfPortIsAvailableErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerPortCheckResponse'
          description: ''
  /api/docker/image-search/:
    get:
      operationId: searchDockerRegistry
      description: Search a docker Image in docker hub Registry
      summary: Search docker hub
      parameters:
      - in: query
        name: q
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - docker
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDockerRegistryErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImageSearchResponse'
          description: ''
  /api/domain/root/:
    get:
      operationId: getRootDomain
      description: Get the root domain used by ZaneOps to generate automatic subdomains
        for services.
      summary: Get Root Domain
      tags:
      - domain
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomainErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomain'
          description: ''
  /api/ping/:
    get:
      operationId: ping
      description: simple healthcheck endpoint.
      summary: Ping
      tags:
      - ping
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PING'
          description: ''
  /api/projects/:
    get:
      operationId: getProjectList
      summary: List all active projects
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -slug
            - -updated_at
            - slug
            - updated_at
        description: |-
          Ordering

          * `slug` - name
          * `-slug` - name (descending)
          * `updated_at` - Updated at
          * `-updated_at` - Updated at (descending)
        explode: false
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: createProject
      summary: Create a new project
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{project_slug}/archive-service/docker/{service_slug}/:
    delete:
      operationId: archiveDockerService
      description: Archive a service created from a docker image.
      summary: Archive a docker service
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/cancel-deployment/docker/{service_slug}/{deployment_hash}/:
    put:
      operationId: cancelDockerServiceDeployment
      description: Cancel a deployment in progress.
      summary: Cancel deployment
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDockerServiceDeploymentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/cancel-service-changes/docker/{service_slug}/{change_id}/:
    delete:
      operationId: cancelDeploymentChanges
      description: Cancel a config change that was requested.
      summary: Cancel a config change
      parameters:
      - in: path
        name: change_id
        schema:
          type: string
          pattern: ^[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDeploymentChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/create-service/docker/:
    post:
      operationId: createDockerService
      description: Create a service from a docker image.
      summary: Create a docker service
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/deploy-service/docker/{service_slug}/:
    put:
      operationId: applyDeploymentChanges
      description: Apply all pending changes for the service and trigger a new deployment.
      summary: Deploy a docker service
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployServiceRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyDeploymentChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceDeployment'
          description: ''
  /api/projects/{project_slug}/deploy-service/docker/{service_slug}/{deployment_hash}/:
    put:
      operationId: redeployDockerService
      description: Revert the service to the state of a previous deployment.
      summary: Redeploy a docker service
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedeployDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceDeployment'
          description: ''
  /api/projects/{project_slug}/request-service-changes/docker/{service_slug}/:
    put:
      operationId: requestDeploymentChanges
      description: Request a change to the configuration of a service.
      summary: Request config changes
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDeploymentChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/:
    get:
      operationId: getDockerService
      description: See all the details of a service.
      summary: Get single service
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/:
    get:
      operationId: projects_service_details_docker_deployments_list
      description: List all deployments for a service, the default order is last created
        descendant.
      summary: List all deployments
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: queued_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: queued_at_before
        schema:
          type: string
          format: date-time
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - CANCELLED
            - CANCELLING
            - FAILED
            - HEALTHY
            - PREPARING
            - QUEUED
            - REMOVED
            - RESTARTING
            - SLEEPING
            - STARTING
            - UNHEALTHY
        description: |-
          * `QUEUED` - Queued
          * `CANCELLED` - Cancelled
          * `CANCELLING` - Cancelling
          * `FAILED` - Failed
          * `PREPARING` - Preparing
          * `STARTING` - Starting
          * `RESTARTING` - Restarting
          * `HEALTHY` - Healthy
          * `UNHEALTHY` - Unhealthy
          * `REMOVED` - Removed
          * `SLEEPING` - Sleeping
        explode: true
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDockerServiceDeploymentList'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/{deployment_hash}/:
    get:
      operationId: projects_service_details_docker_deployments_retrieve
      summary: Get single deployment
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceDeployment'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/{deployment_hash}/http-logs/:
    get:
      operationId: projects_service_details_docker_deployments_http_logs_list
      summary: Get deployment HTTP logs
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: request_host
        schema:
          type: string
      - in: query
        name: request_id
        schema:
          type: string
      - in: query
        name: request_ip
        schema:
          type: string
      - in: query
        name: request_method
        schema:
          type: array
          items:
            type: string
            enum:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
        description: |-
          * `GET` - GET
          * `POST` - POST
          * `PUT` - PUT
          * `DELETE` - DELETE
          * `PATCH` - PATCH
          * `OPTIONS` - OPTIONS
          * `HEAD` - HEAD
        explode: true
        style: form
      - in: query
        name: request_path
        schema:
          type: string
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHttpLogList'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/{deployment_hash}/logs/:
    get:
      operationId: projects_service_details_docker_deployments_logs_list
      summary: Get deployment logs
      parameters:
      - in: query
        name: content
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: query
        name: level
        schema:
          type: string
          enum:
          - ERROR
          - INFO
        description: |-
          * `ERROR` - Error
          * `INFO` - Info
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: source
        schema:
          type: array
          items:
            type: string
            enum:
            - PROXY
            - SERVICE
            - SYSTEM
        description: |-
          * `SYSTEM` - System Logs
          * `PROXY` - Proxy Logs
          * `SERVICE` - Service Logs
        explode: true
        style: form
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimpleLogList'
          description: ''
  /api/projects/{project_slug}/toggle-service/docker/{service_slug}/:
    put:
      operationId: toggleDockerService
      description: Stops a running docker service and restart it if it was stopped.
      summary: Stop/Restart a docker service
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceDeployment'
          description: ''
  /api/projects/{slug}/:
    get:
      operationId: getSingleProject
      summary: Get single project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: updateProject
      summary: Update a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: archiveSingleProject
      summary: Archive a Project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/projects/{slug}/service-list/:
    get:
      operationId: projects_service_list_list
      description: Get all services in a project
      summary: Get service list
      parameters:
      - in: query
        name: query
        schema:
          type: string
          minLength: 1
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceListListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCardResponse'
          description: ''
components:
  schemas:
    ApplyDeploymentChangesCommitMessageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - commit_message
          type: string
          description: '* `commit_message` - commit_message'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ApplyDeploymentChangesError:
      oneOf:
      - $ref: '#/components/schemas/ApplyDeploymentChangesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ApplyDeploymentChangesCommitMessageErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ApplyDeploymentChangesNonFieldErrorsErrorComponent'
          commit_message: '#/components/schemas/ApplyDeploymentChangesCommitMessageErrorComponent'
    ApplyDeploymentChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ApplyDeploymentChangesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ApplyDeploymentChangesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ApplyDeploymentChangesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ApplyDeploymentChangesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApplyDeploymentChangesError'
      required:
      - errors
      - type
    ArchiveDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchivedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        archived_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
      required:
      - archived_at
      - description
      - id
      - slug
    AuthedSuccessResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - user
    CancelDeploymentChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CancelDockerServiceDeploymentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CheckIfPortIsAvailableError:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
          port: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
    CheckIfPortIsAvailableErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CheckIfPortIsAvailableValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CheckIfPortIsAvailableNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailablePortErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - port
          type: string
          description: '* `port` - port'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailableValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CheckIfPortIsAvailableError'
      required:
      - errors
      - type
    ClientErrorEnum:
      enum:
      - client_error
      type: string
      description: '* `client_error` - Client Error'
    CreateDockerServiceCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.non_field_errors
          type: string
          description: '* `credentials.non_field_errors` - credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.password
          type: string
          description: '* `credentials.password` - credentials.password'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.username
          type: string
          description: '* `credentials.username` - credentials.username'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceError:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceImageErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
          image: '#/components/schemas/CreateDockerServiceImageErrorComponent'
          credentials.non_field_errors: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
          credentials.username: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
          credentials.password: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
    CreateDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateDockerServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateDockerServiceImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image
          type: string
          description: '* `image` - image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateDockerServiceError'
      required:
      - errors
      - type
    CreateProjectDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectError:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateProjectSlugErrorComponent'
      - $ref: '#/components/schemas/CreateProjectDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateProjectSlugErrorComponent'
          description: '#/components/schemas/CreateProjectDescriptionErrorComponent'
    CreateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateProjectError'
      required:
      - errors
      - type
    DeploymentChangeRequestRequest:
      oneOf:
      - $ref: '#/components/schemas/URLItemChangeRequest'
      - $ref: '#/components/schemas/VolumeItemChangeRequest'
      - $ref: '#/components/schemas/EnvItemChangeRequest'
      - $ref: '#/components/schemas/PortItemChangeRequest'
      - $ref: '#/components/schemas/DockerCredentialsFieldChangeRequest'
      - $ref: '#/components/schemas/DockerCommandFieldChangeRequest'
      - $ref: '#/components/schemas/DockerImageFieldChangeRequest'
      - $ref: '#/components/schemas/HealthcheckFieldChangeRequest'
      - $ref: '#/components/schemas/ResourceLimitChangeRequest'
      discriminator:
        propertyName: field
        mapping:
          null: '#/components/schemas/ResourceLimitChangeRequest'
    DeploymentDocker:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
        command:
          type: string
          nullable: true
        healthcheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          readOnly: true
          nullable: true
        project_id:
          type: string
          readOnly: true
        credentials:
          allOf:
          - $ref: '#/components/schemas/DockerCredential'
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/DockerEnvVariable'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        network_alias:
          type: string
          nullable: true
          maxLength: 300
        unapplied_changes:
          type: array
          items:
            $ref: '#/components/schemas/DockerDeploymentChange'
          readOnly: true
        resource_limits:
          allOf:
          - $ref: '#/components/schemas/ResourceLimits'
          nullable: true
      required:
      - command
      - created_at
      - credentials
      - env_variables
      - healthcheck
      - id
      - image
      - network_alias
      - network_aliases
      - ports
      - project_id
      - resource_limits
      - slug
      - unapplied_changes
      - updated_at
      - urls
      - volumes
    DockerCommandFieldChangeFieldEnum:
      enum:
      - command
      type: string
      description: '* `command` - command'
    DockerCommandFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          type: string
          nullable: true
          minLength: 1
        field:
          $ref: '#/components/schemas/DockerCommandFieldChangeFieldEnum'
      required:
      - field
      - new_value
    DockerCredential:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    DockerCredentialsFieldChangeFieldEnum:
      enum:
      - credentials
      type: string
      description: '* `credentials` - credentials'
    DockerCredentialsFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/DockerCredentialsRequestRequest'
          nullable: true
        field:
          $ref: '#/components/schemas/DockerCredentialsFieldChangeFieldEnum'
      required:
      - field
      - new_value
    DockerCredentialsRequestRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
    DockerDeploymentChange:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/DockerDeploymentChangeTypeEnum'
        field:
          $ref: '#/components/schemas/DockerDeploymentChangeFieldEnum'
        new_value:
          nullable: true
        old_value:
          nullable: true
        item_id:
          type: string
          nullable: true
          maxLength: 255
      required:
      - field
      - id
      - item_id
      - new_value
      - old_value
      - type
    DockerDeploymentChangeFieldEnum:
      enum:
      - image
      - command
      - credentials
      - healthcheck
      - volumes
      - env_variables
      - urls
      - ports
      - resource_limits
      type: string
      description: |-
        * `image` - image
        * `command` - command
        * `credentials` - credentials
        * `healthcheck` - healthcheck
        * `volumes` - volumes
        * `env_variables` - env variables
        * `urls` - urls
        * `ports` - ports
        * `resource_limits` - resource limits
    DockerDeploymentChangeTypeEnum:
      enum:
      - UPDATE
      - DELETE
      - ADD
      type: string
      description: |-
        * `UPDATE` - update
        * `DELETE` - delete
        * `ADD` - add
    DockerEnvVariable:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 255
        value:
          type: string
          maxLength: 255
      required:
      - id
      - key
      - value
    DockerImage:
      type: object
      properties:
        full_image:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - full_image
    DockerImageFieldChangeFieldEnum:
      enum:
      - image
      type: string
      description: '* `image` - image'
    DockerImageFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          type: string
          minLength: 1
        field:
          $ref: '#/components/schemas/DockerImageFieldChangeFieldEnum'
      required:
      - field
      - new_value
    DockerImageSearchResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/DockerImage'
      required:
      - images
    DockerPortCheckRequestRequest:
      type: object
      properties:
        port:
          type: integer
          minimum: 0
      required:
      - port
    DockerPortCheckResponse:
      type: object
      properties:
        available:
          type: boolean
      required:
      - available
    DockerService:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          nullable: true
          maxLength: 510
        command:
          type: string
          nullable: true
        healthcheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          readOnly: true
          nullable: true
        project_id:
          type: string
          readOnly: true
        credentials:
          allOf:
          - $ref: '#/components/schemas/DockerCredential'
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/DockerEnvVariable'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        network_alias:
          type: string
          nullable: true
          maxLength: 300
        unapplied_changes:
          type: array
          items:
            $ref: '#/components/schemas/DockerDeploymentChange'
          readOnly: true
        resource_limits:
          allOf:
          - $ref: '#/components/schemas/ResourceLimits'
          nullable: true
      required:
      - command
      - created_at
      - credentials
      - env_variables
      - healthcheck
      - id
      - image
      - network_alias
      - network_aliases
      - ports
      - project_id
      - resource_limits
      - slug
      - unapplied_changes
      - updated_at
      - urls
      - volumes
    DockerServiceCard:
      type: object
      properties:
        updated_at:
          type: string
          format: date-time
        volume_number:
          type: integer
        slug:
          type: string
        url:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/ServiceStatusEnum'
        id:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/DockerServiceCardTypeEnum'
          default: docker
        image:
          type: string
        tag:
          type: string
      required:
      - id
      - image
      - slug
      - status
      - tag
      - type
      - updated_at
      - url
      - volume_number
    DockerServiceCardTypeEnum:
      enum:
      - docker
      type: string
      description: '* `docker` - docker'
    DockerServiceCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          minLength: 1
        credentials:
          $ref: '#/components/schemas/DockerCredentialsRequestRequest'
      required:
      - image
    DockerServiceDeployServiceRequest:
      type: object
      properties:
        commit_message:
          type: string
    DockerServiceDeployment:
      type: object
      properties:
        is_current_production:
          type: boolean
        slot:
          $ref: '#/components/schemas/SlotEnum'
        queued_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          nullable: true
        finished_at:
          type: string
          format: date-time
          nullable: true
        redeploy_hash:
          type: string
          readOnly: true
          nullable: true
        hash:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/DockerServiceDeploymentStatusEnum'
        status_reason:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        unprefixed_hash:
          type: string
          readOnly: true
        service_snapshot:
          $ref: '#/components/schemas/DeploymentDocker'
        changes:
          type: array
          items:
            $ref: '#/components/schemas/DockerDeploymentChange'
          readOnly: true
        commit_message:
          type: string
      required:
      - changes
      - commit_message
      - finished_at
      - hash
      - is_current_production
      - network_aliases
      - queued_at
      - redeploy_hash
      - service_snapshot
      - slot
      - started_at
      - status
      - status_reason
      - unprefixed_hash
      - url
    DockerServiceDeploymentStatusEnum:
      enum:
      - QUEUED
      - CANCELLED
      - CANCELLING
      - FAILED
      - PREPARING
      - STARTING
      - RESTARTING
      - HEALTHY
      - UNHEALTHY
      - REMOVED
      - SLEEPING
      type: string
      description: |-
        * `QUEUED` - Queued
        * `CANCELLED` - Cancelled
        * `CANCELLING` - Cancelling
        * `FAILED` - Failed
        * `PREPARING` - Preparing
        * `STARTING` - Starting
        * `RESTARTING` - Restarting
        * `HEALTHY` - Healthy
        * `UNHEALTHY` - Unhealthy
        * `REMOVED` - Removed
        * `SLEEPING` - Sleeping
    EnvItemChangeFieldEnum:
      enum:
      - env_variables
      type: string
      description: '* `env_variables` - env_variables'
    EnvItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/EnvRequestRequest'
        field:
          $ref: '#/components/schemas/EnvItemChangeFieldEnum'
      required:
      - field
      - type
    EnvRequestRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required:
      - key
      - value
    Error401:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode401Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode404Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Error409CodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409CodeEnum:
      enum:
      - resource_conflict
      type: string
      description: '* `resource_conflict` - Resource Conflict'
    Error429:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode429Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
      description: |-
        * `authentication_failed` - Authentication Failed
        * `not_authenticated` - Not Authenticated
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
      description: '* `not_found` - Not Found'
    ErrorCode429Enum:
      enum:
      - throttled
      type: string
      description: '* `throttled` - Throttled'
    ErrorResponse401:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse409:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error409'
      required:
      - errors
      - type
    ErrorResponse429:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error429'
      required:
      - errors
      - type
    FieldChangeTypeEnum:
      enum:
      - UPDATE
      type: string
      description: '* `UPDATE` - Update'
    GetArchivedProjectListError:
      oneOf:
      - $ref: '#/components/schemas/GetArchivedProjectListSlugErrorComponent'
      - $ref: '#/components/schemas/GetArchivedProjectListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          slug: '#/components/schemas/GetArchivedProjectListSlugErrorComponent'
          sort_by: '#/components/schemas/GetArchivedProjectListSortByErrorComponent'
    GetArchivedProjectListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/GetArchivedProjectListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/GetArchivedProjectListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    GetArchivedProjectListSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetArchivedProjectListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetArchivedProjectListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/GetArchivedProjectListError'
      required:
      - errors
      - type
    GetAuthedUserErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetCSRFErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetProjectListError:
      oneOf:
      - $ref: '#/components/schemas/GetProjectListSlugErrorComponent'
      - $ref: '#/components/schemas/GetProjectListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          slug: '#/components/schemas/GetProjectListSlugErrorComponent'
          sort_by: '#/components/schemas/GetProjectListSortByErrorComponent'
    GetProjectListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/GetProjectListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/GetProjectListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    GetProjectListSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetProjectListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetProjectListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/GetProjectListError'
      required:
      - errors
      - type
    GetRootDomain:
      type: object
      properties:
        domain:
          type: string
      required:
      - domain
    GetRootDomainErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GitServiceCard:
      type: object
      properties:
        updated_at:
          type: string
          format: date-time
        volume_number:
          type: integer
        slug:
          type: string
        url:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/ServiceStatusEnum'
        id:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/GitServiceCardTypeEnum'
          default: git
        repository:
          type: string
        last_commit_message:
          type: string
        branch:
          type: string
      required:
      - branch
      - id
      - last_commit_message
      - repository
      - slug
      - status
      - type
      - updated_at
      - url
      - volume_number
    GitServiceCardTypeEnum:
      enum:
      - git
      type: string
      description: '* `git` - git'
    HealthCheck:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/HealthCheckTypeEnum'
        value:
          type: string
          maxLength: 255
        timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - interval_seconds
      - timeout_seconds
      - type
      - value
    HealthCheckRequestRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HealthCheckRequestTypeEnum'
        value:
          type: string
          minLength: 1
          maxLength: 255
        timeout_seconds:
          type: integer
          minimum: 5
          default: 30
        interval_seconds:
          type: integer
          minimum: 5
          default: 30
      required:
      - type
      - value
    HealthCheckRequestTypeEnum:
      enum:
      - PATH
      - COMMAND
      type: string
      description: |-
        * `PATH` - path
        * `COMMAND` - command
    HealthCheckTypeEnum:
      enum:
      - COMMAND
      - PATH
      type: string
      description: |-
        * `COMMAND` - Command
        * `PATH` - Path
    HealthcheckFieldChangeFieldEnum:
      enum:
      - healthcheck
      type: string
      description: '* `healthcheck` - healthcheck'
    HealthcheckFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/HealthCheckRequestRequest'
          nullable: true
        field:
          $ref: '#/components/schemas/HealthcheckFieldChangeFieldEnum'
      required:
      - field
      - new_value
    HttpLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          type: integer
          maximum: 2147483647
          minimum: 0
        time:
          type: string
          format: date-time
        deployment_id:
          type: string
          nullable: true
        service_id:
          type: string
          nullable: true
        request_id:
          type: string
          nullable: true
          maxLength: 255
        request_ip:
          type: string
        request_path:
          type: string
          maxLength: 2000
        request_query:
          type: string
          nullable: true
          maxLength: 2000
        request_host:
          type: string
          format: uri
          maxLength: 1000
        request_protocol:
          $ref: '#/components/schemas/RequestProtocolEnum'
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        request_duration_ns:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        request_headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        response_headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - deployment_id
      - id
      - request_duration_ns
      - request_headers
      - request_host
      - request_id
      - request_ip
      - request_method
      - request_path
      - request_protocol
      - request_query
      - response_headers
      - service_id
      - status
      - time
    ItemChangeTypeEnum:
      enum:
      - ADD
      - DELETE
      - UPDATE
      type: string
      description: |-
        * `ADD` - Add
        * `DELETE` - Delete
        * `UPDATE` - Update
    LevelEnum:
      enum:
      - ERROR
      - INFO
      type: string
      description: |-
        * `ERROR` - Error
        * `INFO` - Info
    LoginError:
      oneOf:
      - $ref: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LoginUsernameErrorComponent'
      - $ref: '#/components/schemas/LoginPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/LoginUsernameErrorComponent'
          password: '#/components/schemas/LoginPasswordErrorComponent'
    LoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - password
      - username
    LoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    LoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LoginError'
      required:
      - errors
      - type
    LogoutErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    MemoryLimit:
      type: object
      properties:
        value:
          type: integer
          minimum: 0
        unit:
          $ref: '#/components/schemas/UnitEnum'
      required:
      - unit
      - value
    MemoryLimitRequestRequest:
      type: object
      properties:
        value:
          type: integer
          minimum: 0
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitEnum'
          default: MEGABYTES
      required:
      - value
    PING:
      type: object
      properties:
        ping:
          $ref: '#/components/schemas/PingEnum'
      required:
      - ping
    PaginatedArchivedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArchivedProject'
      required:
      - count
      - next
      - previous
      - results
    PaginatedDockerServiceDeploymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DockerServiceDeployment'
      required:
      - count
      - next
      - previous
      - results
    PaginatedHttpLogList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/HttpLog'
      required:
      - next
      - previous
      - results
    PaginatedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      required:
      - count
      - next
      - previous
      - results
    PaginatedSimpleLogList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimpleLog'
      required:
      - next
      - previous
      - results
    ParseError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ParseErrorCodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
      description: '* `parse_error` - Parse Error'
    ParseErrorResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedProjectUpdateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    PingEnum:
      enum:
      - pong
      type: string
      description: '* `pong` - pong'
    PingErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PortConfiguration:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        host:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        forwarded:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - forwarded
      - host
      - id
    PortItemChangeFieldEnum:
      enum:
      - ports
      type: string
      description: '* `ports` - ports'
    PortItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/ServicePortsRequestRequest'
        field:
          $ref: '#/components/schemas/PortItemChangeFieldEnum'
      required:
      - field
      - type
    Project:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        healthy_services:
          type: integer
          readOnly: true
        total_services:
          type: integer
          readOnly: true
      required:
      - created_at
      - description
      - healthy_services
      - id
      - slug
      - total_services
      - updated_at
    ProjectCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListTimeErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestMethodErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestPathErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestHostErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListStatusErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIpErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIdErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          time: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListTimeErrorComponent'
          request_method: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestMethodErrorComponent'
          request_path: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestPathErrorComponent'
          request_host: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestHostErrorComponent'
          status: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListStatusErrorComponent'
          request_ip: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIpErrorComponent'
          request_id: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIdErrorComponent'
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestHostErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_host
          type: string
          description: '* `request_host` - request_host'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_id
          type: string
          description: '* `request_id` - request_id'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestIpErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_ip
          type: string
          description: '* `request_ip` - request_ip'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestMethodErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_method
          type: string
          description: '* `request_method` - request_method'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListRequestPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_path
          type: string
          description: '* `request_path` - request_path'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid
          - max_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_value` - max_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - time
          type: string
          description: '* `time` - time'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsHttpLogsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsHttpLogsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDockerDeploymentsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListQueuedAtErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          status: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent'
          queued_at: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListQueuedAtErrorComponent'
    ProjectsServiceDetailsDockerDeploymentsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDockerDeploymentsListQueuedAtErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - queued_at
          type: string
          description: '* `queued_at` - queued_at'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDockerDeploymentsLogsListContentErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - content
          type: string
          description: '* `content` - content'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsLogsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListLevelErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListContentErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListTimeErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListSourceErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          level: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListLevelErrorComponent'
          content: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListContentErrorComponent'
          time: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListTimeErrorComponent'
          source: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListSourceErrorComponent'
    ProjectsServiceDetailsDockerDeploymentsLogsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDockerDeploymentsLogsListLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - level
          type: string
          description: '* `level` - level'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsLogsListSourceErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - source
          type: string
          description: '* `source` - source'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsLogsListTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - time
          type: string
          description: '* `time` - time'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsLogsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsLogsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDockerDeploymentsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceListListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RedeployDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RequestDeploymentChangesError:
      oneOf:
      - $ref: '#/components/schemas/RequestDeploymentChangesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesTypeErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesItemIdErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueDomainErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueBasePathErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueStripPrefixErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToUrlErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToPermanentErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesFieldErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueNameErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueContainerPathErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueHostPathErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueModeErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueKeyErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueValueErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueHostErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueForwardedErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueUsernameErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValuePasswordErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueTypeErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueTimeoutSecondsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueIntervalSecondsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueCpusErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueMemoryNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueMemoryValueErrorComponent'
      - $ref: '#/components/schemas/RequestDeploymentChangesNewValueMemoryUnitErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RequestDeploymentChangesNonFieldErrorsErrorComponent'
          type: '#/components/schemas/RequestDeploymentChangesTypeErrorComponent'
          item_id: '#/components/schemas/RequestDeploymentChangesItemIdErrorComponent'
          new_value.non_field_errors: '#/components/schemas/RequestDeploymentChangesNewValueNonFieldErrorsErrorComponent'
          new_value.domain: '#/components/schemas/RequestDeploymentChangesNewValueDomainErrorComponent'
          new_value.base_path: '#/components/schemas/RequestDeploymentChangesNewValueBasePathErrorComponent'
          new_value.strip_prefix: '#/components/schemas/RequestDeploymentChangesNewValueStripPrefixErrorComponent'
          new_value.redirect_to.non_field_errors: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToNonFieldErrorsErrorComponent'
          new_value.redirect_to.url: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToUrlErrorComponent'
          new_value.redirect_to.permanent: '#/components/schemas/RequestDeploymentChangesNewValueRedirectToPermanentErrorComponent'
          field: '#/components/schemas/RequestDeploymentChangesFieldErrorComponent'
          new_value.name: '#/components/schemas/RequestDeploymentChangesNewValueNameErrorComponent'
          new_value.container_path: '#/components/schemas/RequestDeploymentChangesNewValueContainerPathErrorComponent'
          new_value.host_path: '#/components/schemas/RequestDeploymentChangesNewValueHostPathErrorComponent'
          new_value.mode: '#/components/schemas/RequestDeploymentChangesNewValueModeErrorComponent'
          new_value.key: '#/components/schemas/RequestDeploymentChangesNewValueKeyErrorComponent'
          new_value.value: '#/components/schemas/RequestDeploymentChangesNewValueValueErrorComponent'
          new_value.host: '#/components/schemas/RequestDeploymentChangesNewValueHostErrorComponent'
          new_value.forwarded: '#/components/schemas/RequestDeploymentChangesNewValueForwardedErrorComponent'
          new_value.username: '#/components/schemas/RequestDeploymentChangesNewValueUsernameErrorComponent'
          new_value.password: '#/components/schemas/RequestDeploymentChangesNewValuePasswordErrorComponent'
          new_value: '#/components/schemas/RequestDeploymentChangesNewValueErrorComponent'
          new_value.type: '#/components/schemas/RequestDeploymentChangesNewValueTypeErrorComponent'
          new_value.timeout_seconds: '#/components/schemas/RequestDeploymentChangesNewValueTimeoutSecondsErrorComponent'
          new_value.interval_seconds: '#/components/schemas/RequestDeploymentChangesNewValueIntervalSecondsErrorComponent'
          new_value.cpus: '#/components/schemas/RequestDeploymentChangesNewValueCpusErrorComponent'
          new_value.memory.non_field_errors: '#/components/schemas/RequestDeploymentChangesNewValueMemoryNonFieldErrorsErrorComponent'
          new_value.memory.value: '#/components/schemas/RequestDeploymentChangesNewValueMemoryValueErrorComponent'
          new_value.memory.unit: '#/components/schemas/RequestDeploymentChangesNewValueMemoryUnitErrorComponent'
    RequestDeploymentChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RequestDeploymentChangesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RequestDeploymentChangesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RequestDeploymentChangesFieldErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - field
          type: string
          description: '* `field` - field'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - item_id
          type: string
          description: '* `item_id` - item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueBasePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.base_path
          type: string
          description: '* `new_value.base_path` - new_value.base_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueContainerPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.container_path
          type: string
          description: '* `new_value.container_path` - new_value.container_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueCpusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.cpus
          type: string
          description: '* `new_value.cpus` - new_value.cpus'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.domain
          type: string
          description: '* `new_value.domain` - new_value.domain'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value
          type: string
          description: '* `new_value` - new_value'
        code:
          enum:
          - blank
          - invalid
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueForwardedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.forwarded
          type: string
          description: '* `new_value.forwarded` - new_value.forwarded'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueHostErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.host
          type: string
          description: '* `new_value.host` - new_value.host'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueHostPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.host_path
          type: string
          description: '* `new_value.host_path` - new_value.host_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueIntervalSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.interval_seconds
          type: string
          description: '* `new_value.interval_seconds` - new_value.interval_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.key
          type: string
          description: '* `new_value.key` - new_value.key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueMemoryNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.non_field_errors
          type: string
          description: '* `new_value.memory.non_field_errors` - new_value.memory.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueMemoryUnitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.unit
          type: string
          description: '* `new_value.memory.unit` - new_value.memory.unit'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueMemoryValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.value
          type: string
          description: '* `new_value.memory.value` - new_value.memory.value'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueModeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.mode
          type: string
          description: '* `new_value.mode` - new_value.mode'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.name
          type: string
          description: '* `new_value.name` - new_value.name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.non_field_errors
          type: string
          description: '* `new_value.non_field_errors` - new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValuePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.password
          type: string
          description: '* `new_value.password` - new_value.password'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueRedirectToNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.non_field_errors
          type: string
          description: '* `new_value.redirect_to.non_field_errors` - new_value.redirect_to.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueRedirectToPermanentErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.permanent
          type: string
          description: '* `new_value.redirect_to.permanent` - new_value.redirect_to.permanent'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueRedirectToUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.url
          type: string
          description: '* `new_value.redirect_to.url` - new_value.redirect_to.url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueStripPrefixErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.strip_prefix
          type: string
          description: '* `new_value.strip_prefix` - new_value.strip_prefix'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueTimeoutSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.timeout_seconds
          type: string
          description: '* `new_value.timeout_seconds` - new_value.timeout_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.type
          type: string
          description: '* `new_value.type` - new_value.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.username
          type: string
          description: '* `new_value.username` - new_value.username'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNewValueValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.value
          type: string
          description: '* `new_value.value` - new_value.value'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - type
          type: string
          description: '* `type` - type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestDeploymentChangesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestDeploymentChangesError'
      required:
      - errors
      - type
    RequestMethodEnum:
      enum:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
      - HEAD
      type: string
      description: |-
        * `GET` - GET
        * `POST` - POST
        * `PUT` - PUT
        * `DELETE` - DELETE
        * `PATCH` - PATCH
        * `OPTIONS` - OPTIONS
        * `HEAD` - HEAD
    RequestProtocolEnum:
      enum:
      - HTTP/1.0
      - HTTP/1.1
      - HTTP/2.0
      - HTTP/3.0
      type: string
      description: |-
        * `HTTP/1.0` - HTTP/1.0
        * `HTTP/1.1` - HTTP/1.1
        * `HTTP/2.0` - HTTP/2.0
        * `HTTP/3.0` - HTTP/3.0
    ResourceLimitChangeFieldEnum:
      enum:
      - resource_limits
      type: string
      description: '* `resource_limits` - resource_limits'
    ResourceLimitChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/ResourceLimitsRequestRequest'
          nullable: true
        field:
          $ref: '#/components/schemas/ResourceLimitChangeFieldEnum'
      required:
      - field
      - new_value
    ResourceLimits:
      type: object
      properties:
        cpus:
          type: number
          format: double
          nullable: true
        memory:
          allOf:
          - $ref: '#/components/schemas/MemoryLimit'
          nullable: true
      required:
      - cpus
      - memory
    ResourceLimitsRequestRequest:
      type: object
      properties:
        cpus:
          type: number
          format: double
          minimum: 0.1
        memory:
          $ref: '#/components/schemas/MemoryLimitRequestRequest'
    SearchDockerRegistryErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ServiceCardResponse:
      oneOf:
      - $ref: '#/components/schemas/DockerServiceCard'
      - $ref: '#/components/schemas/GitServiceCard'
      discriminator:
        propertyName: type
        mapping:
          null: '#/components/schemas/GitServiceCard'
    ServicePortsRequestRequest:
      type: object
      properties:
        host:
          type: integer
          default: 80
        forwarded:
          type: integer
      required:
      - forwarded
    ServiceStatusEnum:
      enum:
      - HEALTHY
      - UNHEALTHY
      - SLEEPING
      - NOT_DEPLOYED_YET
      - DEPLOYING
      type: string
      description: |-
        * `HEALTHY` - Healthy
        * `UNHEALTHY` - Unhealthy
        * `SLEEPING` - Sleeping
        * `NOT_DEPLOYED_YET` - Not deployed yet
        * `DEPLOYING` - Deploying
    SimpleLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          nullable: true
        time:
          type: string
          format: date-time
        level:
          $ref: '#/components/schemas/LevelEnum'
        deployment_id:
          type: string
          nullable: true
        service_id:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/SourceEnum'
      required:
      - content
      - deployment_id
      - id
      - level
      - service_id
      - source
      - time
    SlotEnum:
      enum:
      - BLUE
      - GREEN
      type: string
      description: |-
        * `BLUE` - Blue
        * `GREEN` - Green
    SourceEnum:
      enum:
      - SYSTEM
      - PROXY
      - SERVICE
      type: string
      description: |-
        * `SYSTEM` - System Logs
        * `PROXY` - Proxy Logs
        * `SERVICE` - Service Logs
    ToggleDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    URLItemChangeFieldEnum:
      enum:
      - urls
      type: string
      description: '* `urls` - urls'
    URLItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/URLRequestRequest'
        field:
          $ref: '#/components/schemas/URLItemChangeFieldEnum'
      required:
      - field
      - type
    URLModel:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        domain:
          type: string
          maxLength: 1000
        base_path:
          type: string
          default: /
        strip_prefix:
          type: boolean
        redirect_to:
          allOf:
          - $ref: '#/components/schemas/URLRedirect'
          nullable: true
      required:
      - base_path
      - domain
      - id
      - redirect_to
      - strip_prefix
    URLRedirect:
      type: object
      properties:
        url:
          type: string
          format: uri
        permanent:
          type: boolean
          default: false
      required:
      - permanent
      - url
    URLRedirectRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        permanent:
          type: boolean
          default: false
      required:
      - url
    URLRequestRequest:
      type: object
      properties:
        domain:
          type: string
          minLength: 1
        base_path:
          type: string
          minLength: 1
          default: /
        strip_prefix:
          type: boolean
          default: true
        redirect_to:
          $ref: '#/components/schemas/URLRedirectRequest'
      required:
      - domain
    UnitEnum:
      enum:
      - BYTES
      - KILOBYTES
      - MEGABYTES
      - GIGABYTES
      type: string
      description: |-
        * `BYTES` - bytes
        * `KILOBYTES` - kilobytes
        * `MEGABYTES` - megabytes
        * `GIGABYTES` - gigabytes
    UpdateProjectDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectError:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectSlugErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/UpdateProjectSlugErrorComponent'
          description: '#/components/schemas/UpdateProjectDescriptionErrorComponent'
    UpdateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProjectError'
      required:
      - errors
      - type
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - first_name
      - last_name
      - username
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
      description: '* `validation_error` - Validation Error'
    Volume:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
          minLength: 1
        container_path:
          type: string
          maxLength: 255
        host_path:
          type: string
          nullable: true
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeModeEnum'
      required:
      - container_path
      - host_path
      - id
      - mode
      - name
    VolumeItemChangeFieldEnum:
      enum:
      - volumes
      type: string
      description: '* `volumes` - volumes'
    VolumeItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/VolumeRequestRequest'
        field:
          $ref: '#/components/schemas/VolumeItemChangeFieldEnum'
      required:
      - field
      - type
    VolumeModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - Read-Only
        * `READ_WRITE` - Read-Write
    VolumeRequestModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - READ_ONLY
        * `READ_WRITE` - READ_WRITE
    VolumeRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        container_path:
          type: string
          minLength: 1
          maxLength: 255
        host_path:
          type: string
          minLength: 1
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeRequestModeEnum'
      required:
      - container_path
    _proxyLogsListContentErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - content
          type: string
          description: '* `content` - content'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    _proxyLogsListError:
      oneOf:
      - $ref: '#/components/schemas/_proxyLogsListLevelErrorComponent'
      - $ref: '#/components/schemas/_proxyLogsListContentErrorComponent'
      - $ref: '#/components/schemas/_proxyLogsListTimeErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          level: '#/components/schemas/_proxyLogsListLevelErrorComponent'
          content: '#/components/schemas/_proxyLogsListContentErrorComponent'
          time: '#/components/schemas/_proxyLogsListTimeErrorComponent'
    _proxyLogsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/_proxyLogsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/_proxyLogsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    _proxyLogsListLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - level
          type: string
          description: '* `level` - level'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    _proxyLogsListTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - time
          type: string
          description: '* `time` - time'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    _proxyLogsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/_proxyLogsListError'
      required:
      - errors
      - type
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: https://lab.fkiss.me/
