openapi: 3.0.3
info:
  title: ZaneOps API
  version: 1.x
  description: "\n\n## Overview\n\nZaneOps is a self-hosted, open source platform\
    \ as a service for hosting static sites, web apps, \ndatabases, CRONS, Workers\
    \ using docker swarm as the engine.\n\n## Errors\n\n### 405 Method Not Allowed\n\
    \nThis is returned when an endpoint is called with an unexpected http method.\
    \ For example, if updating a user requires\na POST request and a PATCH is issued\
    \ instead, this error is returned. Here's how it looks like:\n\n```json\n{\n \
    \ \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"method_not_allowed\"\
    ,\n      \"detail\": \"Method “patch” not allowed.\",\n      \"attr\": null\n\
    \    }\n  ]\n}\n```\n\n### 406 Not Acceptable\n\nThis is returned if the `Accept`\
    \ header is submitted and contains a value other than `application/json`. Here's\
    \ how the\nresponse would look:\n\n```json\n{\n  \"type\": \"client_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"not_acceptable\",\n      \"detail\"\
    : \"Could not satisfy the request Accept header.\",\n      \"attr\": null\n  \
    \  }\n  ]\n}\n```\n\n### 415 Unsupported Media Type\n\nThis is returned when the\
    \ request content type is not json. Here's how the response would look:\n\n```json\n\
    {\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_acceptable\"\
    ,\n      \"detail\": \"Unsupported media type “application/xml” in request.\"\
    ,\n      \"attr\": null\n    }\n  ]\n}\n```\n\n### 500 Internal Server Error\n\
    \nThis is returned when the API server encounters an unexpected error. Here's\
    \ how the response would look:\n\n```json\n{\n  \"type\": \"server_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"error\",\n      \"detail\": \"A server\
    \ error occurred.\",\n      \"attr\": null\n    }\n  ]\n}\n```\n"
paths:
  /api/auth/check-user-existence/:
    get:
      operationId: auth_check_user_existence_retrieve
      description: Returns whether a single user already exists in the system.
      summary: Check if a user exists
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCheckUserExistenceRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExistenceResponse'
          description: ''
  /api/auth/create-initial-user/:
    post:
      operationId: auth_create_initial_user_create
      description: Creates a new user if no user exists.
      summary: Create a user
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreationRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreationRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCreateInitialUserCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatedResponse'
          description: ''
  /api/auth/login/:
    post:
      operationId: login
      description: Authenticate User, what is returned is a cookie named `sessionid`
        that will be used for authentication of the next requests.
      summary: Login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
          description: ''
        '302':
          description: No response body
  /api/auth/logout/:
    delete:
      operationId: logout
      summary: Logout
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/auth/me/:
    get:
      operationId: getAuthedUser
      description: Get current authenticated user.
      summary: Get current user
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthedUserErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthedSuccessResponse'
          description: ''
  /api/connectors/{id}/:
    get:
      operationId: connectors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^git_con_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitApp'
          description: ''
    delete:
      operationId: connectors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^git_con_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/connectors/{id}/paginated-repositories/:
    get:
      operationId: listGitAppRepositoriesPaginated
      summary: List all repositories for a git app (paginated)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^git_con_[a-zA-Z0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: query
        schema:
          type: string
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitAppRepositoriesPaginatedErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGitRepositoryList'
          description: ''
  /api/connectors/{id}/repositories/:
    get:
      operationId: listGitAppRepositories
      summary: List all repositories for a git app
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^git_con_[a-zA-Z0-9]+$
        required: true
      - in: query
        name: query
        schema:
          type: string
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitAppRepositoriesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRepository'
          description: ''
  /api/connectors/github/{id}/:
    get:
      operationId: connectors_github_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gh_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsGithubRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubApp'
          description: ''
    patch:
      operationId: connectors_github_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gh_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGithubAppRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGithubAppRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGithubAppRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsGithubPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubApp'
          description: ''
  /api/connectors/github/{id}/test/:
    get:
      operationId: testGithubApp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gh_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestGithubAppErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestGithubAppResponse'
          description: ''
  /api/connectors/github/setup/:
    get:
      operationId: setupGithubApp
      summary: setup github app
      parameters:
      - in: query
        name: code
        schema:
          type: string
          minLength: 1
        required: true
      - in: query
        name: installation_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: string
          minLength: 1
          pattern: ^(create|install\:gh_app_[a-zA-Z0-9]+)$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupGithubAppErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '303':
          description: No response body
  /api/connectors/gitlab/{id}/:
    get:
      operationId: connectors_gitlab_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gl_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsGitlabRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitlabApp'
          description: ''
  /api/connectors/gitlab/{id}/sync-repositories/:
    put:
      operationId: syncGitlabRepos
      summary: Sync GitLab repositories for a GitLab application
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gl_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncGitlabReposErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncGitlabRepositoriesResponse'
          description: ''
  /api/connectors/gitlab/{id}/test/:
    get:
      operationId: testGitlabApp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gl_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestGitlabAppErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestGitlabAppResponse'
          description: ''
  /api/connectors/gitlab/{id}/update/:
    put:
      operationId: connectors_gitlab_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^gl_app_[a-zA-Z0-9]+$
        required: true
      tags:
      - connectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitlabAppUpdateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GitlabAppUpdateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GitlabAppUpdateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitlabAppUpdateResponse'
          description: ''
  /api/connectors/gitlab/create/:
    post:
      operationId: createGitlabApp
      summary: create a gitlab app
      tags:
      - connectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitlabAppRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGitlabAppRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGitlabAppRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitlabAppErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitlabAppResponse'
          description: ''
  /api/connectors/gitlab/setup/:
    get:
      operationId: setupGitlabApp
      summary: Set a gitlab app
      parameters:
      - in: query
        name: code
        schema:
          type: string
          minLength: 1
        required: true
      - in: query
        name: state
        schema:
          type: string
          minLength: 1
          pattern: ^(gitlab-setup|gitlab-update):[a-zA-Z0-9]+
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupGitlabAppErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '303':
          description: No response body
  /api/connectors/list/:
    get:
      operationId: listGitApps
      summary: List all git apps
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitAppsErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitApp'
          description: ''
  /api/connectors/repository-branches/:
    get:
      operationId: listGitRepoBranches
      summary: List all the branches of a repository
      parameters:
      - in: query
        name: git_app_id
        schema:
          type: string
          minLength: 1
      - in: query
        name: repository_url
        schema:
          type: string
          format: uri
          minLength: 1
        required: true
      tags:
      - connectors
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitRepoBranchesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ''
  /api/csrf/:
    get:
      operationId: getCSRF
      description: CSRF cookie endpoint for retrieving a CSRF token before doing mutative
        requests (`DELETE`, `POST`, `PUT`, `PATCH`).You need to pass the cookie named
        `csrftoken` to all requests alongside a `X-CSRFToken` with the value of the
        token.
      summary: Get CSRF cookie
      tags:
      - csrf
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCSRFErrorResponse400'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '401':
          description: No response body
  /api/deploy-service/docker/{deploy_token}/:
    put:
      operationId: webhookDockerDeployService
      description: trigger a new deployment.
      summary: Webhook to deploy a docker service
      parameters:
      - in: path
        name: deploy_token
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      tags:
      - deploy-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceWebhookDeployRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceWebhookDeployRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceWebhookDeployRequestRequest'
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDockerDeployServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '202':
          description: No response body
  /api/deploy-service/git/{deploy_token}/:
    put:
      operationId: webhookGitDeployService
      description: trigger a new deployment.
      summary: Webhook to deploy a git service
      parameters:
      - in: path
        name: deploy_token
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      tags:
      - deploy-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitServiceWebhookDeployRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GitServiceWebhookDeployRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GitServiceWebhookDeployRequestRequest'
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookGitDeployServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '202':
          description: No response body
  /api/docker/image-search/:
    get:
      operationId: searchDockerRegistry
      description: Search a docker Image in docker hub Registry
      summary: Search docker hub
      parameters:
      - in: query
        name: q
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - docker
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDockerRegistryErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImageSearchResponse'
          description: ''
  /api/ping/:
    get:
      operationId: ping
      description: simple healthcheck endpoint.
      summary: Ping
      tags:
      - ping
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PING'
          description: ''
  /api/projects/:
    get:
      operationId: getProjectList
      summary: List all active projects
      parameters:
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -slug
            - -updated_at
            - slug
            - updated_at
        description: |-
          Ordering

          * `slug` - name
          * `-slug` - name (descending)
          * `updated_at` - Updated at
          * `-updated_at` - Updated at (descending)
        explode: false
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: createProject
      summary: Create a new project
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{project_slug}/{env_slug}/archive-service/docker/{service_slug}/:
    delete:
      operationId: archiveService
      description: Archive a service.
      summary: Archive a service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/archive-service/git/{service_slug}/:
    delete:
      operationId: archiveGitService
      description: Archive a git service.
      summary: Archive a git service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveGitServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/bulk-deploy-services/:
    put:
      operationId: bulkDeployServices
      description: Deploy all selected services in an environment
      summary: Bulk deploy services
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeployServiceRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkDeployServiceRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkDeployServiceRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeployServicesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '202':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/bulk-toggle-services/:
    put:
      operationId: bulkToggleServices
      description: Stops a running docker service and restart it if it was stopped.
      summary: Stop/Restart multiple services
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkToggleServiceStateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkToggleServiceStateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkToggleServiceStateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkToggleServicesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '202':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/cancel-deployment/{service_slug}/{deployment_hash}/:
    put:
      operationId: cancelServiceDeployment
      description: Cancel a deployment in progress.
      summary: Cancel deployment
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceDeploymentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/cancel-service-changes/{service_slug}/{change_id}/:
    delete:
      operationId: cancelServiceChanges
      description: Cancel a config change that was requested.
      summary: Cancel a config change
      parameters:
      - in: path
        name: change_id
        schema:
          type: string
          pattern: ^[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/create-service/docker/:
    post:
      operationId: createDockerService
      description: Create a service from a docker image.
      summary: Create a docker service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/create-service/git/:
    post:
      operationId: createGitService
      description: Create a service from a docker image.
      summary: Create a docker service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitServiceRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGitServiceRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGitServiceRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/deploy-service/docker/{service_slug}/:
    put:
      operationId: deployDockerService
      description: Apply all pending changes for the service and trigger a new deployment.
      summary: Deploy a docker service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceDeployRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeployment'
          description: ''
  /api/projects/{project_slug}/{env_slug}/deploy-service/git/{service_slug}/:
    put:
      operationId: deployGitService
      description: Apply all pending changes for the service and trigger a new deployment.
      summary: Deploy a git service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitServiceDeployRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GitServiceDeployRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GitServiceDeployRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployGitServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeployment'
          description: ''
  /api/projects/{project_slug}/{env_slug}/redeploy-service/docker/{service_slug}/{deployment_hash}/:
    put:
      operationId: redeployDockerService
      description: Revert the service to the state of a previous deployment.
      summary: Redeploy a docker service
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedeployDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeployment'
          description: ''
  /api/projects/{project_slug}/{env_slug}/redeploy-service/git/{service_slug}/{deployment_hash}/:
    put:
      operationId: reDeployGitService
      description: Revert the service to the state of a previous deployment.
      summary: Redeploy a git service
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitServiceReDeployRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GitServiceReDeployRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GitServiceReDeployRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReDeployGitServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeployment'
          description: ''
  /api/projects/{project_slug}/{env_slug}/request-env-changes/{service_slug}/:
    put:
      operationId: requestEnvChanges
      description: Request a change to the environments variables of a service.
      summary: Request env changes
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvStringChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvStringChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvStringChangeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEnvChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/request-service-changes/{service_slug}/:
    put:
      operationId: requestServiceChanges
      description: Request a change to the configuration of a service.
      summary: Request config changes
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeploymentChangeRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestServiceChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/cleanup-deployment-queue/:
    put:
      operationId: cleanupDeploymentQueue
      description: Cleanup the current running deployment queue
      summary: Cleanup Deployment queue
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCleanupQueueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeploymentCleanupQueueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeploymentCleanupQueueRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanupDeploymentQueueErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '202':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/:
    get:
      operationId: projects_service_details_deployments_list
      description: List all deployments for a service, the default order is last created
        descendant.
      summary: List all deployments
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: queued_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: queued_at_before
        schema:
          type: string
          format: date-time
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - BUILDING
            - CANCELLED
            - CANCELLING
            - FAILED
            - HEALTHY
            - PREPARING
            - QUEUED
            - REMOVED
            - RESTARTING
            - SLEEPING
            - STARTING
            - UNHEALTHY
        description: |-
          * `QUEUED` - Queued
          * `CANCELLED` - Cancelled
          * `CANCELLING` - Cancelling
          * `FAILED` - Failed
          * `PREPARING` - Preparing
          * `BUILDING` - Building
          * `STARTING` - Starting
          * `RESTARTING` - Restarting
          * `HEALTHY` - Healthy
          * `UNHEALTHY` - Unhealthy
          * `REMOVED` - Removed
          * `SLEEPING` - Sleeping
        explode: true
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceDeploymentList'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/:
    get:
      operationId: projects_service_details_deployments_retrieve
      summary: Get single deployment
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeployment'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/build-logs/:
    get:
      operationId: projects_service_details_deployments_build_logs_retrieve
      summary: Get deployment build logs
      parameters:
      - in: query
        name: cursor
        schema:
          type: string
          minLength: 1
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: per_page
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsBuildLogsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeLogsSearch'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/http-logs/:
    get:
      operationId: projects_service_details_deployments_http_logs_list
      summary: Get deployment HTTP logs
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: request_host
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_id
        schema:
          type: string
      - in: query
        name: request_ip
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_method
        schema:
          type: array
          items:
            type: string
            enum:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
        description: |-
          * `GET` - GET
          * `POST` - POST
          * `PUT` - PUT
          * `DELETE` - DELETE
          * `PATCH` - PATCH
          * `OPTIONS` - OPTIONS
          * `HEAD` - HEAD
        explode: true
        style: form
      - in: query
        name: request_path
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_query
        schema:
          type: string
      - in: query
        name: request_user_agent
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -request_duration_ns
            - -time
            - request_duration_ns
            - time
        description: |-
          Ordering

          * `time` - Time
          * `-time` - Time (descending)
          * `request_duration_ns` - Request duration ns
          * `-request_duration_ns` - Request duration ns (descending)
        explode: false
        style: form
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHttpLogList'
          description: ''
  ? /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/http-logs/{request_uuid}/
  : get:
      operationId: projects_service_details_deployments_http_logs_retrieve
      summary: Get single deployment http log
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: request_uuid
        schema:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpLog'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/http-logs/fields/:
    get:
      operationId: projects_service_details_deployments_http_logs_fields_list
      summary: Get deployment http logs fields values
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: field
        schema:
          enum:
          - request_host
          - request_path
          - request_user_agent
          - request_ip
          type: string
          minLength: 1
        description: |-
          * `request_host` - request_host
          * `request_path` - request_path
          * `request_user_agent` - request_user_agent
          * `request_ip` - request_ip
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: value
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsFieldsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/metrics/:
    get:
      operationId: projects_service_details_deployments_metrics_list
      summary: Get service or deployment metrics
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: time_range
        schema:
          enum:
          - LAST_HOUR
          - LAST_6HOURS
          - LAST_DAY
          - LAST_WEEK
          - LAST_MONTH
          type: string
          default: LAST_HOUR
          minLength: 1
        description: |-
          * `LAST_HOUR` - LAST_HOUR
          * `LAST_6HOURS` - LAST_6HOURS
          * `LAST_DAY` - LAST_DAY
          * `LAST_WEEK` - LAST_WEEK
          * `LAST_MONTH` - LAST_MONTH
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsMetricsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceMetrics'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/deployments/{deployment_hash}/runtime-logs/:
    get:
      operationId: projects_service_details_deployments_runtime_logs_retrieve
      summary: Get deployment logs
      parameters:
      - in: query
        name: cursor
        schema:
          type: string
          minLength: 1
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: level
        schema:
          type: array
          items:
            enum:
            - INFO
            - ERROR
            type: string
            description: |-
              * `INFO` - INFO
              * `ERROR` - ERROR
      - in: query
        name: per_page
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: query
        schema:
          type: string
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsRuntimeLogsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeLogsSearch'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/http-logs/:
    get:
      operationId: projects_service_details_http_logs_list
      summary: Get service HTTP logs
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: request_host
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_id
        schema:
          type: string
      - in: query
        name: request_ip
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_method
        schema:
          type: array
          items:
            type: string
            enum:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
        description: |-
          * `GET` - GET
          * `POST` - POST
          * `PUT` - PUT
          * `DELETE` - DELETE
          * `PATCH` - PATCH
          * `OPTIONS` - OPTIONS
          * `HEAD` - HEAD
        explode: true
        style: form
      - in: query
        name: request_path
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: request_query
        schema:
          type: string
      - in: query
        name: request_user_agent
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -request_duration_ns
            - -time
            - request_duration_ns
            - time
        description: |-
          Ordering

          * `time` - Time
          * `-time` - Time (descending)
          * `request_duration_ns` - Request duration ns
          * `-request_duration_ns` - Request duration ns (descending)
        explode: false
        style: form
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: time_before
        schema:
          type: string
          format: date-time
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHttpLogList'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/http-logs/{request_uuid}/:
    get:
      operationId: projects_service_details_http_logs_retrieve
      summary: Get single service http log
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: request_uuid
        schema:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpLog'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/http-logs/fields/:
    get:
      operationId: projects_service_details_http_logs_fields_list
      summary: Get service http logs fields values
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: field
        schema:
          enum:
          - request_host
          - request_path
          - request_user_agent
          - request_ip
          type: string
          minLength: 1
        description: |-
          * `request_host` - request_host
          * `request_path` - request_path
          * `request_user_agent` - request_user_agent
          * `request_ip` - request_ip
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: value
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsFieldsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/metrics/:
    get:
      operationId: projects_service_details_metrics_list
      summary: Get service or deployment metrics
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: time_range
        schema:
          enum:
          - LAST_HOUR
          - LAST_6HOURS
          - LAST_DAY
          - LAST_WEEK
          - LAST_MONTH
          type: string
          default: LAST_HOUR
          minLength: 1
        description: |-
          * `LAST_HOUR` - LAST_HOUR
          * `LAST_6HOURS` - LAST_6HOURS
          * `LAST_DAY` - LAST_DAY
          * `LAST_WEEK` - LAST_WEEK
          * `LAST_MONTH` - LAST_MONTH
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsMetricsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceMetrics'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{service_slug}/regenerate-deploy-token/:
    patch:
      operationId: regenerateServiceDeployToken
      summary: Regenerate service deploy token
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenerateServiceDeployTokenErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/service-details/{slug}/:
    get:
      operationId: getSingleService
      description: See all the details of a service.
      summary: Get single service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: updateService
      summary: Update a service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project_slug}/{env_slug}/toggle-service/{service_slug}/:
    put:
      operationId: toggleService
      description: Stops a running docker service and restart it if it was stopped.
      summary: Stop/Restart a docker service
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleServiceStateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleServiceStateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleServiceStateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '202':
          description: No response body
  /api/projects/{project_slug}/{env_slug}/variables/:
    get:
      operationId: projects_variables_list
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharedEnvVariable'
          description: ''
    post:
      operationId: projects_variables_create
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedEnvVariable'
          description: ''
  /api/projects/{project_slug}/{env_slug}/variables/{id}/:
    get:
      operationId: projects_variables_retrieve
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this shared env variable.
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedEnvVariable'
          description: ''
    put:
      operationId: projects_variables_update
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this shared env variable.
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedEnvVariableRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedEnvVariable'
          description: ''
    patch:
      operationId: projects_variables_partial_update
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this shared env variable.
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSharedEnvVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSharedEnvVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSharedEnvVariableRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedEnvVariable'
          description: ''
    delete:
      operationId: projects_variables_destroy
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this shared env variable.
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsVariablesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/preview-templates/{template_slug}/:
    get:
      operationId: projects_preview_templates_retrieve
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: template_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPreviewTemplatesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewEnvTemplate'
          description: ''
    patch:
      operationId: projects_preview_templates_partial_update
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: template_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPreviewEnvTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPreviewEnvTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPreviewEnvTemplateRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewEnvTemplate'
          description: ''
    delete:
      operationId: projects_preview_templates_destroy
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: template_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPreviewTemplatesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{slug}/:
    get:
      operationId: getSingleProject
      summary: Get single project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: updateProject
      summary: Update a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: archiveSingleProject
      summary: Archive a Project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/projects/{slug}/{env_slug}/service-list/:
    get:
      operationId: projects_service_list_list
      description: Get all services in a project
      summary: Get service list
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: query
        name: query
        schema:
          type: string
          minLength: 1
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceListListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCardResponse'
          description: ''
  /api/projects/{slug}/clone-environment/{env_slug}/:
    post:
      operationId: cloneEnvironment
      description: Create new environment from another
      summary: Clone environment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneEnvironmentRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CloneEnvironmentRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CloneEnvironmentRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneEnvironmentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentWithVariables'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
  /api/projects/{slug}/create-environment/:
    post:
      operationId: createNewEnvironment
      description: Create empty environment with no services in it
      summary: Create new environment
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNewEnvironmentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
  /api/projects/{slug}/environment-details/{env_slug}/:
    get:
      operationId: getEnvironment
      summary: Get a single environment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentWithVariables'
          description: ''
    patch:
      operationId: updateEnvironment
      summary: Update an environment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateEnvironmentRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateEnvironmentRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateEnvironmentRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
    delete:
      operationId: archiveEnvironment
      description: Archive environment with the services inside of it
      summary: Archive environment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveEnvironmentErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{slug}/environment-details/{env_slug}/review-preview-deployment/:
    get:
      operationId: getPreviewEnvToReview
      summary: Get the preview deployment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPreviewEnvToReviewErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentWithVariables'
          description: ''
    post:
      operationId: reviewPreviewEnvDeploy
      summary: Approve or Decline the execution of the deployment of a preview environment
      parameters:
      - in: path
        name: env_slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewPreviewEnvDeploymentRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewPreviewEnvDeploymentRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewPreviewEnvDeploymentRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewPreviewEnvDeployErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{slug}/preview-templates/:
    get:
      operationId: projects_preview_templates_list
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPreviewTemplatesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewEnvTemplate'
          description: ''
    post:
      operationId: projects_preview_templates_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewEnvTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PreviewEnvTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PreviewEnvTemplateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewEnvTemplate'
          description: ''
  /api/recent-deployments/:
    get:
      operationId: recent_deployments_list
      description: List the 10 most recent deployments made on this instance.
      summary: List recent deployments
      tags:
      - recent-deployments
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentDeploymentsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleDeployment'
          description: ''
  /api/search-resources/:
    get:
      operationId: searchResources
      summary: search for resources (project, service, environment ...)
      parameters:
      - in: query
        name: query
        schema:
          type: string
          minLength: 1
      tags:
      - search-resources
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResourcesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceResponse'
          description: ''
  /api/server/resource-limits/:
    get:
      operationId: getServerResouceLimits
      description: Get the number of CPUS & memory of the server.
      summary: Get server resource limits
      tags:
      - server
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerResouceLimitsErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimit'
          description: ''
  /api/settings/:
    get:
      operationId: getAPISettings
      description: Get the settings of the API.
      summary: Get API settings
      tags:
      - settings
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAPISettingsErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
  /api/shell/ssh-keys/:
    get:
      operationId: getSSHKeyList
      summary: List all ssh keys
      tags:
      - shell
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSSHKeyListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SSHKey'
          description: ''
    post:
      operationId: createSSHKey
      summary: Create a new SSH key
      tags:
      - shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSSHKeyRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSSHKeyRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSSHKeyRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSSHKeyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: ''
  /api/shell/ssh-keys/{slug}/:
    get:
      operationId: shell_ssh_keys_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - shell
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShellSshKeysRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: ''
    delete:
      operationId: shell_ssh_keys_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        required: true
      tags:
      - shell
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShellSshKeysDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/trigger-preview/{deploy_token}/:
    post:
      operationId: webhookTriggerPreviewEnv
      summary: Webhook to trigger a new preview environment
      parameters:
      - in: path
        name: deploy_token
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      tags:
      - trigger-preview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerPreviewEnvRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerPreviewEnvRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerPreviewEnvRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookTriggerPreviewEnvErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentWithVariables'
          description: ''
  /api/trigger-update/:
    post:
      operationId: trigger_update_create
      description: Triggers the Docker auto-update workflow using Temporal.
      summary: Trigger Auto-Update
      tags:
      - trigger-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoUpdateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutoUpdateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutoUpdateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerUpdateCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoUpdateResponse'
          description: ''
components:
  schemas:
    ArchiveEnvironmentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveGitServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthCheckUserExistenceRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthCreateInitialUserCreateError:
      oneOf:
      - $ref: '#/components/schemas/AuthCreateInitialUserCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AuthCreateInitialUserCreateUsernameErrorComponent'
      - $ref: '#/components/schemas/AuthCreateInitialUserCreatePasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AuthCreateInitialUserCreateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/AuthCreateInitialUserCreateUsernameErrorComponent'
          password: '#/components/schemas/AuthCreateInitialUserCreatePasswordErrorComponent'
    AuthCreateInitialUserCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AuthCreateInitialUserCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AuthCreateInitialUserCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthCreateInitialUserCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthCreateInitialUserCreatePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthCreateInitialUserCreateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthCreateInitialUserCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AuthCreateInitialUserCreateError'
      required:
      - errors
      - type
    AuthedSuccessResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - user
    AutoUpdateRequestRequest:
      type: object
      properties:
        desired_version:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - desired_version
    AutoUpdateResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    BuilderRequestRequest:
      type: object
      properties:
        builder:
          allOf:
          - $ref: '#/components/schemas/GitServiceBuilderEnum'
          default: DOCKERFILE
        build_context_dir:
          type: string
          minLength: 1
          default: ./
        dockerfile_path:
          type: string
          minLength: 1
          default: ./Dockerfile
        build_stage_target:
          type: string
          nullable: true
          minLength: 1
        publish_directory:
          type: string
          minLength: 1
          default: ./
        is_spa:
          type: boolean
          default: false
        not_found_page:
          type: string
          nullable: true
          minLength: 1
        index_page:
          type: string
          minLength: 1
          default: ./index.html
        is_static:
          type: boolean
          default: false
        build_directory:
          type: string
          minLength: 1
          default: ./
        custom_install_command:
          type: string
          nullable: true
          minLength: 1
        custom_build_command:
          type: string
          nullable: true
          minLength: 1
        custom_start_command:
          type: string
          nullable: true
          minLength: 1
    BulkDeployServiceRequestRequest:
      type: object
      properties:
        service_ids:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - service_ids
    BulkDeployServicesError:
      oneOf:
      - $ref: '#/components/schemas/BulkDeployServicesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/BulkDeployServicesServiceIdsErrorComponent'
      - $ref: '#/components/schemas/BulkDeployServicesServiceIdsINDEXErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/BulkDeployServicesNonFieldErrorsErrorComponent'
          service_ids: '#/components/schemas/BulkDeployServicesServiceIdsErrorComponent'
          service_ids.INDEX: '#/components/schemas/BulkDeployServicesServiceIdsINDEXErrorComponent'
    BulkDeployServicesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/BulkDeployServicesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/BulkDeployServicesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    BulkDeployServicesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkDeployServicesServiceIdsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - service_ids
          type: string
          description: '* `service_ids` - service_ids'
        code:
          enum:
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkDeployServicesServiceIdsINDEXErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - service_ids.INDEX
          type: string
          description: '* `service_ids.INDEX` - service_ids.INDEX'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkDeployServicesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkDeployServicesError'
      required:
      - errors
      - type
    BulkToggleServiceStateRequestRequest:
      type: object
      properties:
        desired_state:
          $ref: '#/components/schemas/DesiredStateEnum'
        service_ids:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - desired_state
      - service_ids
    BulkToggleServicesDesiredStateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - desired_state
          type: string
          description: '* `desired_state` - desired_state'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkToggleServicesError:
      oneOf:
      - $ref: '#/components/schemas/BulkToggleServicesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/BulkToggleServicesDesiredStateErrorComponent'
      - $ref: '#/components/schemas/BulkToggleServicesServiceIdsErrorComponent'
      - $ref: '#/components/schemas/BulkToggleServicesServiceIdsINDEXErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/BulkToggleServicesNonFieldErrorsErrorComponent'
          desired_state: '#/components/schemas/BulkToggleServicesDesiredStateErrorComponent'
          service_ids: '#/components/schemas/BulkToggleServicesServiceIdsErrorComponent'
          service_ids.INDEX: '#/components/schemas/BulkToggleServicesServiceIdsINDEXErrorComponent'
    BulkToggleServicesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/BulkToggleServicesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/BulkToggleServicesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    BulkToggleServicesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkToggleServicesServiceIdsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - service_ids
          type: string
          description: '* `service_ids` - service_ids'
        code:
          enum:
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkToggleServicesServiceIdsINDEXErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - service_ids.INDEX
          type: string
          description: '* `service_ids.INDEX` - service_ids.INDEX'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    BulkToggleServicesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkToggleServicesError'
      required:
      - errors
      - type
    CancelServiceChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CancelServiceDeploymentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CleanupDeploymentQueueCancelRunningDeploymentsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cancel_running_deployments
          type: string
          description: '* `cancel_running_deployments` - cancel_running_deployments'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CleanupDeploymentQueueError:
      oneOf:
      - $ref: '#/components/schemas/CleanupDeploymentQueueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CleanupDeploymentQueueCancelRunningDeploymentsErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CleanupDeploymentQueueNonFieldErrorsErrorComponent'
          cancel_running_deployments: '#/components/schemas/CleanupDeploymentQueueCancelRunningDeploymentsErrorComponent'
    CleanupDeploymentQueueErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CleanupDeploymentQueueValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CleanupDeploymentQueueValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CleanupDeploymentQueueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CleanupDeploymentQueueValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CleanupDeploymentQueueError'
      required:
      - errors
      - type
    ClientErrorEnum:
      enum:
      - client_error
      type: string
      description: '* `client_error` - Client Error'
    CloneEnvironmentDeployServicesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - deploy_services
          type: string
          description: '* `deploy_services` - deploy_services'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CloneEnvironmentError:
      oneOf:
      - $ref: '#/components/schemas/CloneEnvironmentNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CloneEnvironmentDeployServicesErrorComponent'
      - $ref: '#/components/schemas/CloneEnvironmentNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CloneEnvironmentNonFieldErrorsErrorComponent'
          deploy_services: '#/components/schemas/CloneEnvironmentDeployServicesErrorComponent'
          name: '#/components/schemas/CloneEnvironmentNameErrorComponent'
    CloneEnvironmentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CloneEnvironmentValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CloneEnvironmentValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CloneEnvironmentNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CloneEnvironmentNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CloneEnvironmentRequestRequest:
      type: object
      properties:
        deploy_services:
          type: boolean
          default: false
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    CloneEnvironmentValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CloneEnvironmentError'
      required:
      - errors
      - type
    CloneStrategyEnum:
      enum:
      - ALL
      - ONLY
      type: string
      description: |-
        * `ALL` - All services
        * `ONLY` - Only specific services
    Config:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
          minLength: 1
        mount_path:
          type: string
          maxLength: 255
        contents:
          type: string
        language:
          type: string
          maxLength: 255
        version:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - contents
      - id
      - language
      - mount_path
      - name
      - version
    ConfigItemChangeFieldEnum:
      enum:
      - configs
      type: string
      description: '* `configs` - configs'
    ConfigItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/ConfigRequestRequest'
        field:
          $ref: '#/components/schemas/ConfigItemChangeFieldEnum'
      required:
      - field
      - type
    ConfigRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        mount_path:
          type: string
          minLength: 1
          maxLength: 255
        contents:
          type: string
        language:
          type: string
          minLength: 1
          maxLength: 255
        version:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - mount_path
      - name
    ConfigRequestRequest:
      type: object
      properties:
        contents:
          type: string
        name:
          type: string
          minLength: 1
        mount_path:
          type: string
          minLength: 1
        language:
          type: string
          minLength: 1
          default: plaintext
      required:
      - contents
      - mount_path
    ConnectorsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ConnectorsGithubPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ConnectorsGithubPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ConnectorsGithubPartialUpdateNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ConnectorsGithubPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ConnectorsGithubPartialUpdateNameErrorComponent'
    ConnectorsGithubPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ConnectorsGithubPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ConnectorsGithubPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ConnectorsGithubPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGithubPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGithubPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorsGithubPartialUpdateError'
      required:
      - errors
      - type
    ConnectorsGithubRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ConnectorsGitlabRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ConnectorsGitlabUpdateUpdateAppSecretErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - app_secret
          type: string
          description: '* `app_secret` - app_secret'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGitlabUpdateUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateNameErrorComponent'
      - $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateAppSecretErrorComponent'
      - $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateRedirectUriErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ConnectorsGitlabUpdateUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ConnectorsGitlabUpdateUpdateNameErrorComponent'
          app_secret: '#/components/schemas/ConnectorsGitlabUpdateUpdateAppSecretErrorComponent'
          redirect_uri: '#/components/schemas/ConnectorsGitlabUpdateUpdateRedirectUriErrorComponent'
    ConnectorsGitlabUpdateUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ConnectorsGitlabUpdateUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ConnectorsGitlabUpdateUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGitlabUpdateUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGitlabUpdateUpdateRedirectUriErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - redirect_uri
          type: string
          description: '* `redirect_uri` - redirect_uri'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ConnectorsGitlabUpdateUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorsGitlabUpdateUpdateError'
      required:
      - errors
      - type
    ConnectorsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateDockerServiceCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.non_field_errors
          type: string
          description: '* `credentials.non_field_errors` - credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.password
          type: string
          description: '* `credentials.password` - credentials.password'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.username
          type: string
          description: '* `credentials.username` - credentials.username'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceError:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceImageErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
          image: '#/components/schemas/CreateDockerServiceImageErrorComponent'
          credentials.non_field_errors: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
          credentials.username: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
          credentials.password: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
    CreateDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateDockerServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateDockerServiceImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image
          type: string
          description: '* `image` - image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateDockerServiceError'
      required:
      - errors
      - type
    CreateEnvironmentRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    CreateGitServiceBranchNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - branch_name
          type: string
          description: '* `branch_name` - branch_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceBuildContextDirErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - build_context_dir
          type: string
          description: '* `build_context_dir` - build_context_dir'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceBuildDirectoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - build_directory
          type: string
          description: '* `build_directory` - build_directory'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceBuilderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - builder
          type: string
          description: '* `builder` - builder'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceDockerfilePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - dockerfile_path
          type: string
          description: '* `dockerfile_path` - dockerfile_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceError:
      oneOf:
      - $ref: '#/components/schemas/CreateGitServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceSlugErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceRepositoryUrlErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceBranchNameErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceGitAppIdErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceDockerfilePathErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceBuildContextDirErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceBuilderErrorComponent'
      - $ref: '#/components/schemas/CreateGitServicePublishDirectoryErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceIsSpaErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceNotFoundPageErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceIndexPageErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceBuildDirectoryErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceIsStaticErrorComponent'
      - $ref: '#/components/schemas/CreateGitServiceExposedPortErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateGitServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateGitServiceSlugErrorComponent'
          repository_url: '#/components/schemas/CreateGitServiceRepositoryUrlErrorComponent'
          branch_name: '#/components/schemas/CreateGitServiceBranchNameErrorComponent'
          git_app_id: '#/components/schemas/CreateGitServiceGitAppIdErrorComponent'
          dockerfile_path: '#/components/schemas/CreateGitServiceDockerfilePathErrorComponent'
          build_context_dir: '#/components/schemas/CreateGitServiceBuildContextDirErrorComponent'
          builder: '#/components/schemas/CreateGitServiceBuilderErrorComponent'
          publish_directory: '#/components/schemas/CreateGitServicePublishDirectoryErrorComponent'
          is_spa: '#/components/schemas/CreateGitServiceIsSpaErrorComponent'
          not_found_page: '#/components/schemas/CreateGitServiceNotFoundPageErrorComponent'
          index_page: '#/components/schemas/CreateGitServiceIndexPageErrorComponent'
          build_directory: '#/components/schemas/CreateGitServiceBuildDirectoryErrorComponent'
          is_static: '#/components/schemas/CreateGitServiceIsStaticErrorComponent'
          exposed_port: '#/components/schemas/CreateGitServiceExposedPortErrorComponent'
    CreateGitServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateGitServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateGitServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateGitServiceExposedPortErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - exposed_port
          type: string
          description: '* `exposed_port` - exposed_port'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceGitAppIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - git_app_id
          type: string
          description: '* `git_app_id` - git_app_id'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceIndexPageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - index_page
          type: string
          description: '* `index_page` - index_page'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceIsSpaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_spa
          type: string
          description: '* `is_spa` - is_spa'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceIsStaticErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_static
          type: string
          description: '* `is_static` - is_static'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceNotFoundPageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - not_found_page
          type: string
          description: '* `not_found_page` - not_found_page'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServicePublishDirectoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - publish_directory
          type: string
          description: '* `publish_directory` - publish_directory'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceRepositoryUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - repository_url
          type: string
          description: '* `repository_url` - repository_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceRequestRequest:
      oneOf:
      - $ref: '#/components/schemas/GitServiceDockerfileBuilderRequestRequest'
      - $ref: '#/components/schemas/GitServiceStaticDirBuilderRequestRequest'
      - $ref: '#/components/schemas/GitServiceNixpacksBuilderRequestRequest'
      - $ref: '#/components/schemas/GitServiceRailpackBuilderRequestRequest'
      discriminator:
        propertyName: builder
        mapping:
          null: '#/components/schemas/GitServiceRailpackBuilderRequestRequest'
    CreateGitServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateGitServiceError'
      required:
      - errors
      - type
    CreateGitlabAppAppIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - app_id
          type: string
          description: '* `app_id` - app_id'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppAppSecretErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - app_secret
          type: string
          description: '* `app_secret` - app_secret'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppError:
      oneOf:
      - $ref: '#/components/schemas/CreateGitlabAppNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateGitlabAppAppIdErrorComponent'
      - $ref: '#/components/schemas/CreateGitlabAppAppSecretErrorComponent'
      - $ref: '#/components/schemas/CreateGitlabAppRedirectUriErrorComponent'
      - $ref: '#/components/schemas/CreateGitlabAppGitlabUrlErrorComponent'
      - $ref: '#/components/schemas/CreateGitlabAppNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateGitlabAppNonFieldErrorsErrorComponent'
          app_id: '#/components/schemas/CreateGitlabAppAppIdErrorComponent'
          app_secret: '#/components/schemas/CreateGitlabAppAppSecretErrorComponent'
          redirect_uri: '#/components/schemas/CreateGitlabAppRedirectUriErrorComponent'
          gitlab_url: '#/components/schemas/CreateGitlabAppGitlabUrlErrorComponent'
          name: '#/components/schemas/CreateGitlabAppNameErrorComponent'
    CreateGitlabAppErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateGitlabAppValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateGitlabAppValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateGitlabAppGitlabUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - gitlab_url
          type: string
          description: '* `gitlab_url` - gitlab_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppRedirectUriErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - redirect_uri
          type: string
          description: '* `redirect_uri` - redirect_uri'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateGitlabAppRequestRequest:
      type: object
      properties:
        app_id:
          type: string
          minLength: 1
        app_secret:
          type: string
          minLength: 1
        redirect_uri:
          type: string
          format: uri
          minLength: 1
        gitlab_url:
          type: string
          format: uri
          minLength: 1
          default: https://gitlab.com
        name:
          type: string
          minLength: 1
      required:
      - app_id
      - app_secret
      - name
      - redirect_uri
    CreateGitlabAppResponse:
      type: object
      properties:
        state:
          type: string
      required:
      - state
    CreateGitlabAppValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateGitlabAppError'
      required:
      - errors
      - type
    CreateNewEnvironmentError:
      oneOf:
      - $ref: '#/components/schemas/CreateNewEnvironmentNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateNewEnvironmentNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateNewEnvironmentNonFieldErrorsErrorComponent'
          name: '#/components/schemas/CreateNewEnvironmentNameErrorComponent'
    CreateNewEnvironmentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateNewEnvironmentValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateNewEnvironmentValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateNewEnvironmentNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateNewEnvironmentNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateNewEnvironmentValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateNewEnvironmentError'
      required:
      - errors
      - type
    CreateProjectDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectError:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateProjectSlugErrorComponent'
      - $ref: '#/components/schemas/CreateProjectDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateProjectSlugErrorComponent'
          description: '#/components/schemas/CreateProjectDescriptionErrorComponent'
    CreateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateProjectError'
      required:
      - errors
      - type
    CreateSSHKeyError:
      oneOf:
      - $ref: '#/components/schemas/CreateSSHKeyNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateSSHKeyUserErrorComponent'
      - $ref: '#/components/schemas/CreateSSHKeySlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateSSHKeyNonFieldErrorsErrorComponent'
          user: '#/components/schemas/CreateSSHKeyUserErrorComponent'
          slug: '#/components/schemas/CreateSSHKeySlugErrorComponent'
    CreateSSHKeyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateSSHKeyValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateSSHKeyValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateSSHKeyNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateSSHKeyRequestRequest:
      type: object
      properties:
        user:
          type: string
          minLength: 1
        slug:
          type: string
          minLength: 1
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - slug
      - user
    CreateSSHKeySlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateSSHKeyUserErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - user
          type: string
          description: '* `user` - user'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateSSHKeyValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateSSHKeyError'
      required:
      - errors
      - type
    DecisionEnum:
      enum:
      - APPROVE
      - DECLINE
      type: string
      description: |-
        * `APPROVE` - APPROVE
        * `DECLINE` - DECLINE
    DeployDockerServiceCleanupQueueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue
          type: string
          description: '* `cleanup_queue` - cleanup_queue'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployDockerServiceCommitMessageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - commit_message
          type: string
          description: '* `commit_message` - commit_message'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployDockerServiceError:
      oneOf:
      - $ref: '#/components/schemas/DeployDockerServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/DeployDockerServiceCommitMessageErrorComponent'
      - $ref: '#/components/schemas/DeployDockerServiceCleanupQueueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/DeployDockerServiceNonFieldErrorsErrorComponent'
          commit_message: '#/components/schemas/DeployDockerServiceCommitMessageErrorComponent'
          cleanup_queue: '#/components/schemas/DeployDockerServiceCleanupQueueErrorComponent'
    DeployDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/DeployDockerServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/DeployDockerServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    DeployDockerServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployDockerServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DeployDockerServiceError'
      required:
      - errors
      - type
    DeployGitServiceCleanupQueueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue
          type: string
          description: '* `cleanup_queue` - cleanup_queue'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployGitServiceError:
      oneOf:
      - $ref: '#/components/schemas/DeployGitServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/DeployGitServiceIgnoreBuildCacheErrorComponent'
      - $ref: '#/components/schemas/DeployGitServiceCleanupQueueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/DeployGitServiceNonFieldErrorsErrorComponent'
          ignore_build_cache: '#/components/schemas/DeployGitServiceIgnoreBuildCacheErrorComponent'
          cleanup_queue: '#/components/schemas/DeployGitServiceCleanupQueueErrorComponent'
    DeployGitServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/DeployGitServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/DeployGitServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    DeployGitServiceIgnoreBuildCacheErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ignore_build_cache
          type: string
          description: '* `ignore_build_cache` - ignore_build_cache'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployGitServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DeployGitServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DeployGitServiceError'
      required:
      - errors
      - type
    DeployStateEnum:
      enum:
      - APPROVED
      - PENDING
      type: string
      description: |-
        * `APPROVED` - Approved
        * `PENDING` - Pending
    DeploymentChange:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/DeploymentChangeTypeEnum'
        field:
          $ref: '#/components/schemas/DeploymentChangeFieldEnum'
        new_value:
          nullable: true
        old_value:
          nullable: true
        item_id:
          type: string
          nullable: true
          maxLength: 255
      required:
      - field
      - id
      - item_id
      - new_value
      - old_value
      - type
    DeploymentChangeFieldEnum:
      enum:
      - source
      - git_source
      - builder
      - command
      - healthcheck
      - volumes
      - env_variables
      - urls
      - ports
      - resource_limits
      - configs
      type: string
      description: |-
        * `source` - source
        * `git_source` - git_source
        * `builder` - builder
        * `command` - command
        * `healthcheck` - healthcheck
        * `volumes` - volumes
        * `env_variables` - env variables
        * `urls` - urls
        * `ports` - ports
        * `resource_limits` - resource limits
        * `configs` - configs
    DeploymentChangeRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/DeploymentChangeTypeEnum'
        field:
          $ref: '#/components/schemas/DeploymentChangeFieldEnum'
        new_value:
          nullable: true
        old_value:
          nullable: true
        item_id:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
      required:
      - field
      - type
    DeploymentChangeRequestRequest:
      oneOf:
      - $ref: '#/components/schemas/URLItemChangeRequest'
      - $ref: '#/components/schemas/VolumeItemChangeRequest'
      - $ref: '#/components/schemas/EnvItemChangeRequest'
      - $ref: '#/components/schemas/PortItemChangeRequest'
      - $ref: '#/components/schemas/DockerSourceFieldChangeRequest'
      - $ref: '#/components/schemas/DockerCommandFieldChangeRequest'
      - $ref: '#/components/schemas/HealthcheckFieldChangeRequest'
      - $ref: '#/components/schemas/ResourceLimitChangeRequest'
      - $ref: '#/components/schemas/ConfigItemChangeRequest'
      - $ref: '#/components/schemas/GitSourceFieldChangeRequest'
      - $ref: '#/components/schemas/GitBuilderFieldChangeRequest'
      discriminator:
        propertyName: field
        mapping:
          null: '#/components/schemas/GitBuilderFieldChangeRequest'
    DeploymentChangeTypeEnum:
      enum:
      - UPDATE
      - DELETE
      - ADD
      type: string
      description: |-
        * `UPDATE` - update
        * `DELETE` - delete
        * `ADD` - add
    DeploymentCleanupQueueRequest:
      type: object
      properties:
        cancel_running_deployments:
          type: boolean
          default: false
    DeploymentDocker:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceTypeEnum'
          readOnly: true
        image:
          type: string
          readOnly: true
        command:
          type: string
          readOnly: true
          nullable: true
        builder:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GitServiceBuilderEnum'
          - $ref: '#/components/schemas/NullEnum'
        repository_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          maxLength: 2048
        branch_name:
          type: string
          readOnly: true
          nullable: true
          maxLength: 255
        commit_sha:
          type: string
          readOnly: true
          nullable: true
          maxLength: 45
        dockerfile_builder_options:
          allOf:
          - $ref: '#/components/schemas/DockerfileBuilderOptions'
          readOnly: true
          nullable: true
        static_dir_builder_options:
          allOf:
          - $ref: '#/components/schemas/StaticDirectoryBuilderOptions'
          readOnly: true
          nullable: true
        nixpacks_builder_options:
          allOf:
          - $ref: '#/components/schemas/NixpacksBuilderOptions'
          readOnly: true
          nullable: true
        railpack_builder_options:
          allOf:
          - $ref: '#/components/schemas/RailpackBuilderOptions'
          readOnly: true
          nullable: true
        healthcheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          readOnly: true
          nullable: true
        project_id:
          type: string
          readOnly: true
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          readOnly: true
        credentials:
          allOf:
          - $ref: '#/components/schemas/DockerCredential'
          readOnly: true
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        deploy_token:
          type: string
          readOnly: true
          nullable: true
          maxLength: 35
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/EnvVariable'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        network_alias:
          type: string
          readOnly: true
          nullable: true
          maxLength: 300
        global_network_alias:
          type: string
          readOnly: true
        unapplied_changes:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentChange'
          readOnly: true
        resource_limits:
          allOf:
          - $ref: '#/components/schemas/ResourceLimits'
          readOnly: true
          nullable: true
        system_env_variables:
          type: array
          items:
            $ref: '#/components/schemas/SystemEnvVariables'
          readOnly: true
          default: []
        configs:
          type: array
          items:
            $ref: '#/components/schemas/Config'
          readOnly: true
        git_app:
          allOf:
          - $ref: '#/components/schemas/GitApp'
          readOnly: true
          nullable: true
        git_repository:
          allOf:
          - $ref: '#/components/schemas/GitRepository'
          readOnly: true
          nullable: true
        next_git_repository:
          allOf:
          - $ref: '#/components/schemas/GitRepository'
          readOnly: true
          nullable: true
        auto_deploy_enabled:
          type: boolean
        watch_paths:
          type: string
          nullable: true
          maxLength: 2048
        cleanup_queue_on_auto_deploy:
          type: boolean
        pr_preview_envs_enabled:
          type: boolean
      required:
      - auto_deploy_enabled
      - branch_name
      - builder
      - cleanup_queue_on_auto_deploy
      - command
      - commit_sha
      - configs
      - created_at
      - credentials
      - deploy_token
      - dockerfile_builder_options
      - env_variables
      - environment
      - git_app
      - git_repository
      - global_network_alias
      - healthcheck
      - id
      - image
      - network_alias
      - network_aliases
      - next_git_repository
      - nixpacks_builder_options
      - ports
      - pr_preview_envs_enabled
      - project_id
      - railpack_builder_options
      - repository_url
      - resource_limits
      - slug
      - static_dir_builder_options
      - system_env_variables
      - type
      - unapplied_changes
      - updated_at
      - urls
      - volumes
      - watch_paths
    DeploymentStatusEnum:
      enum:
      - QUEUED
      - CANCELLED
      - CANCELLING
      - FAILED
      - PREPARING
      - BUILDING
      - STARTING
      - RESTARTING
      - HEALTHY
      - UNHEALTHY
      - REMOVED
      - SLEEPING
      type: string
      description: |-
        * `QUEUED` - Queued
        * `CANCELLED` - Cancelled
        * `CANCELLING` - Cancelling
        * `FAILED` - Failed
        * `PREPARING` - Preparing
        * `BUILDING` - Building
        * `STARTING` - Starting
        * `RESTARTING` - Restarting
        * `HEALTHY` - Healthy
        * `UNHEALTHY` - Unhealthy
        * `REMOVED` - Removed
        * `SLEEPING` - Sleeping
    DesiredStateEnum:
      enum:
      - start
      - stop
      type: string
      description: |-
        * `start` - start
        * `stop` - stop
    DockerCommandFieldChangeFieldEnum:
      enum:
      - command
      type: string
      description: '* `command` - command'
    DockerCommandFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          type: string
          nullable: true
          minLength: 1
        field:
          $ref: '#/components/schemas/DockerCommandFieldChangeFieldEnum'
      required:
      - field
      - new_value
    DockerCredential:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    DockerCredentialRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - password
      - username
    DockerCredentialsRequestRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
    DockerImage:
      type: object
      properties:
        full_image:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - full_image
    DockerImageSearchResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/DockerImage'
      required:
      - images
    DockerServiceCard:
      type: object
      properties:
        updated_at:
          type: string
          format: date-time
        volume_number:
          type: integer
        slug:
          type: string
        url:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/ServiceStatusEnum'
        id:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/DockerServiceCardTypeEnum'
          default: docker
        image:
          type: string
        tag:
          type: string
      required:
      - id
      - image
      - slug
      - status
      - tag
      - type
      - updated_at
      - url
      - volume_number
    DockerServiceCardTypeEnum:
      enum:
      - docker
      type: string
      description: '* `docker` - docker'
    DockerServiceCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          minLength: 1
        credentials:
          $ref: '#/components/schemas/DockerCredentialsRequestRequest'
      required:
      - image
    DockerServiceDeployRequestRequest:
      type: object
      properties:
        commit_message:
          type: string
        cleanup_queue:
          type: boolean
          default: false
    DockerServiceWebhookDeployRequestRequest:
      type: object
      properties:
        commit_message:
          type: string
        new_image:
          type: string
          minLength: 1
        cleanup_queue:
          type: boolean
    DockerSourceFieldChangeFieldEnum:
      enum:
      - source
      type: string
      description: '* `source` - source'
    DockerSourceFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          $ref: '#/components/schemas/DockerSourceRequestRequest'
        field:
          $ref: '#/components/schemas/DockerSourceFieldChangeFieldEnum'
      required:
      - field
      - new_value
    DockerSourceRequestRequest:
      type: object
      properties:
        image:
          type: string
          minLength: 1
        credentials:
          $ref: '#/components/schemas/DockerCredentialsRequestRequest'
      required:
      - image
    DockerfileBuilderOptions:
      type: object
      properties:
        dockerfile_path:
          type: string
        build_context_dir:
          type: string
        build_stage_target:
          type: string
          nullable: true
      required:
      - build_context_dir
      - build_stage_target
      - dockerfile_path
    DockerfileBuilderOptionsRequest:
      type: object
      properties:
        dockerfile_path:
          type: string
          minLength: 1
        build_context_dir:
          type: string
          minLength: 1
        build_stage_target:
          type: string
          nullable: true
          minLength: 1
      required:
      - build_context_dir
      - build_stage_target
      - dockerfile_path
    EnvItemChangeFieldEnum:
      enum:
      - env_variables
      type: string
      description: '* `env_variables` - env_variables'
    EnvItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/EnvRequestRequest'
        field:
          $ref: '#/components/schemas/EnvItemChangeFieldEnum'
      required:
      - field
      - type
    EnvRequestRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
      required:
      - key
      - value
    EnvStringChangeRequest:
      type: object
      properties:
        new_value:
          type: string
      required:
      - new_value
    EnvVariable:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 255
        value:
          type: string
      required:
      - id
      - key
      - value
    EnvVariableRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        key:
          type: string
          minLength: 1
          maxLength: 255
        value:
          type: string
      required:
      - key
    Environment:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        is_preview:
          type: boolean
        name:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        variables:
          type: array
          items:
            $ref: '#/components/schemas/SharedEnvVariable'
          readOnly: true
        preview_metadata:
          allOf:
          - $ref: '#/components/schemas/SimplePreviewMetadata'
          readOnly: true
      required:
      - id
      - is_preview
      - name
      - preview_metadata
      - variables
    EnvironmentRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        is_preview:
          type: boolean
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    EnvironmentSearchResponse:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        project_slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        type:
          allOf:
          - $ref: '#/components/schemas/EnvironmentSearchResponseTypeEnum'
          default: environment
      required:
      - created_at
      - id
      - name
      - project_slug
      - type
    EnvironmentSearchResponseTypeEnum:
      enum:
      - environment
      type: string
      description: '* `environment` - environment'
    EnvironmentWithVariables:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        is_preview:
          type: boolean
        name:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        preview_metadata:
          allOf:
          - $ref: '#/components/schemas/PreviewMetadata'
          readOnly: true
          nullable: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/SharedEnvVariable'
          readOnly: true
      required:
      - id
      - is_preview
      - name
      - preview_metadata
      - variables
    Error401:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode401Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode404Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Error409CodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409CodeEnum:
      enum:
      - resource_conflict
      type: string
      description: '* `resource_conflict` - Resource Conflict'
    Error429:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode429Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
      description: |-
        * `authentication_failed` - Authentication Failed
        * `not_authenticated` - Not Authenticated
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
      description: '* `not_found` - Not Found'
    ErrorCode429Enum:
      enum:
      - throttled
      type: string
      description: '* `throttled` - Throttled'
    ErrorResponse401:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse409:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error409'
      required:
      - errors
      - type
    ErrorResponse429:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error429'
      required:
      - errors
      - type
    FieldChangeTypeEnum:
      enum:
      - UPDATE
      type: string
      description: '* `UPDATE` - Update'
    GetAPISettingsErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetAuthedUserErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetCSRFErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetEnvironmentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetPreviewEnvToReviewErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetProjectListError:
      oneOf:
      - $ref: '#/components/schemas/GetProjectListSlugErrorComponent'
      - $ref: '#/components/schemas/GetProjectListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          slug: '#/components/schemas/GetProjectListSlugErrorComponent'
          sort_by: '#/components/schemas/GetProjectListSortByErrorComponent'
    GetProjectListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/GetProjectListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/GetProjectListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    GetProjectListSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetProjectListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    GetProjectListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/GetProjectListError'
      required:
      - errors
      - type
    GetSSHKeyListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetServerResouceLimitsErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetSingleServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GitApp:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        github:
          allOf:
          - $ref: '#/components/schemas/GithubApp'
          nullable: true
        gitlab:
          allOf:
          - $ref: '#/components/schemas/GitlabApp'
          nullable: true
      required:
      - github
      - gitlab
      - id
    GitAppRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        github:
          allOf:
          - $ref: '#/components/schemas/GithubAppRequest'
          nullable: true
        gitlab:
          allOf:
          - $ref: '#/components/schemas/GitlabAppRequest'
          nullable: true
      required:
      - github
      - gitlab
    GitBuilderFieldChangeFieldEnum:
      enum:
      - builder
      type: string
      description: '* `builder` - builder'
    GitBuilderFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          $ref: '#/components/schemas/BuilderRequestRequest'
        field:
          $ref: '#/components/schemas/GitBuilderFieldChangeFieldEnum'
      required:
      - field
      - new_value
    GitRepository:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 2000
        url:
          type: string
          format: uri
          maxLength: 200
        private:
          type: boolean
      required:
      - id
      - path
      - private
      - url
    GitRepositoryRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        path:
          type: string
          maxLength: 2000
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        private:
          type: boolean
      required:
      - private
      - url
    GitServiceBuilderEnum:
      enum:
      - DOCKERFILE
      - STATIC_DIR
      - NIXPACKS
      - RAILPACK
      type: string
      description: |-
        * `DOCKERFILE` - Dockerfile
        * `STATIC_DIR` - Static directory
        * `NIXPACKS` - Nixpacks
        * `RAILPACK` - Railpack
    GitServiceCard:
      type: object
      properties:
        updated_at:
          type: string
          format: date-time
        volume_number:
          type: integer
        slug:
          type: string
        url:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/ServiceStatusEnum'
        id:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/GitServiceCardTypeEnum'
          default: git
        repository:
          type: string
        last_commit_message:
          type: string
        branch:
          type: string
        git_provider:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GitServiceCardGitProviderEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - branch
      - git_provider
      - id
      - last_commit_message
      - repository
      - slug
      - status
      - type
      - updated_at
      - url
      - volume_number
    GitServiceCardGitProviderEnum:
      enum:
      - gitlab
      - github
      type: string
      description: |-
        * `gitlab` - gitlab
        * `github` - github
    GitServiceCardTypeEnum:
      enum:
      - git
      type: string
      description: '* `git` - git'
    GitServiceDeployRequestRequest:
      type: object
      properties:
        ignore_build_cache:
          type: boolean
          default: false
        cleanup_queue:
          type: boolean
          default: false
    GitServiceDockerfileBuilderRequestBuilderEnum:
      enum:
      - DOCKERFILE
      type: string
      description: '* `DOCKERFILE` - DOCKERFILE'
    GitServiceDockerfileBuilderRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        repository_url:
          type: string
          format: uri
          minLength: 1
        branch_name:
          type: string
          minLength: 1
        git_app_id:
          type: string
          minLength: 1
        dockerfile_path:
          type: string
          minLength: 1
          default: ./Dockerfile
        build_context_dir:
          type: string
          minLength: 1
          default: ./
        builder:
          allOf:
          - $ref: '#/components/schemas/GitServiceDockerfileBuilderRequestBuilderEnum'
          default: DOCKERFILE
      required:
      - branch_name
      - repository_url
    GitServiceNixpacksBuilderRequestBuilderEnum:
      enum:
      - NIXPACKS
      type: string
      description: '* `NIXPACKS` - NIXPACKS'
    GitServiceNixpacksBuilderRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        repository_url:
          type: string
          format: uri
          minLength: 1
        branch_name:
          type: string
          minLength: 1
        git_app_id:
          type: string
          minLength: 1
        build_directory:
          type: string
          minLength: 1
          default: ./
        is_static:
          type: boolean
          default: false
        is_spa:
          type: boolean
          default: false
        publish_directory:
          type: string
          minLength: 1
          default: ./dist
        exposed_port:
          type: integer
          minimum: 1
          default: 80
        builder:
          allOf:
          - $ref: '#/components/schemas/GitServiceNixpacksBuilderRequestBuilderEnum'
          default: NIXPACKS
      required:
      - branch_name
      - repository_url
    GitServiceRailpackBuilderRequestBuilderEnum:
      enum:
      - RAILPACK
      type: string
      description: '* `RAILPACK` - RAILPACK'
    GitServiceRailpackBuilderRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        repository_url:
          type: string
          format: uri
          minLength: 1
        branch_name:
          type: string
          minLength: 1
        git_app_id:
          type: string
          minLength: 1
        build_directory:
          type: string
          minLength: 1
          default: ./
        is_static:
          type: boolean
          default: false
        is_spa:
          type: boolean
          default: false
        publish_directory:
          type: string
          minLength: 1
          default: ./dist
        exposed_port:
          type: integer
          minimum: 1
          default: 80
        builder:
          allOf:
          - $ref: '#/components/schemas/GitServiceRailpackBuilderRequestBuilderEnum'
          default: RAILPACK
      required:
      - branch_name
      - repository_url
    GitServiceReDeployRequestRequest:
      type: object
      properties:
        ignore_build_cache:
          type: boolean
          default: true
    GitServiceStaticDirBuilderRequestBuilderEnum:
      enum:
      - STATIC_DIR
      type: string
      description: '* `STATIC_DIR` - STATIC_DIR'
    GitServiceStaticDirBuilderRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        repository_url:
          type: string
          format: uri
          minLength: 1
        branch_name:
          type: string
          minLength: 1
        git_app_id:
          type: string
          minLength: 1
        publish_directory:
          type: string
          minLength: 1
          default: ./
        is_spa:
          type: boolean
          default: false
        not_found_page:
          type: string
          nullable: true
          minLength: 1
        index_page:
          type: string
          minLength: 1
          default: ./index.html
        builder:
          allOf:
          - $ref: '#/components/schemas/GitServiceStaticDirBuilderRequestBuilderEnum'
          default: STATIC_DIR
      required:
      - branch_name
      - repository_url
    GitServiceWebhookDeployRequestRequest:
      type: object
      properties:
        ignore_build_cache:
          type: boolean
          default: false
        commit_sha:
          type: string
          minLength: 1
          default: HEAD
        cleanup_queue:
          type: boolean
    GitSourceFieldChangeFieldEnum:
      enum:
      - git_source
      type: string
      description: '* `git_source` - git_source'
    GitSourceFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          $ref: '#/components/schemas/GitSourceRequestRequest'
        field:
          $ref: '#/components/schemas/GitSourceFieldChangeFieldEnum'
      required:
      - field
      - new_value
    GitSourceRequestRequest:
      type: object
      properties:
        repository_url:
          type: string
          format: uri
          minLength: 1
        branch_name:
          type: string
          minLength: 1
        commit_sha:
          type: string
          minLength: 1
          default: HEAD
        git_app_id:
          type: string
          nullable: true
          minLength: 1
      required:
      - branch_name
      - repository_url
    GithubApp:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        installation_id:
          type: integer
          readOnly: true
        app_url:
          type: string
          format: uri
          readOnly: true
        app_id:
          type: integer
          readOnly: true
        is_installed:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - app_id
      - app_url
      - created_at
      - id
      - installation_id
      - is_installed
      - name
    GithubAppRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
    GitlabApp:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        app_id:
          type: string
          readOnly: true
        gitlab_url:
          type: string
          format: uri
          readOnly: true
        secret:
          type: string
        is_installed:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        redirect_uri:
          type: string
          format: uri
          maxLength: 200
      required:
      - app_id
      - created_at
      - gitlab_url
      - id
      - is_installed
      - name
      - redirect_uri
      - secret
    GitlabAppRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        secret:
          type: string
          minLength: 1
        redirect_uri:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
      required:
      - name
      - secret
    GitlabAppUpdateRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        app_secret:
          type: string
          minLength: 1
        redirect_uri:
          type: string
          format: uri
          minLength: 1
      required:
      - app_secret
      - name
      - redirect_uri
    GitlabAppUpdateResponse:
      type: object
      properties:
        state:
          type: string
      required:
      - state
    HealthCheck:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/HealthCheckTypeEnum'
        value:
          type: string
          maxLength: 255
        timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        associated_port:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
      required:
      - associated_port
      - id
      - interval_seconds
      - timeout_seconds
      - type
      - value
    HealthCheckRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/HealthCheckTypeEnum'
        value:
          type: string
          minLength: 1
          maxLength: 255
        timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        associated_port:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
    HealthCheckRequestRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HealthCheckRequestTypeEnum'
        value:
          type: string
          minLength: 1
          maxLength: 255
        timeout_seconds:
          type: integer
          minimum: 5
          default: 30
        interval_seconds:
          type: integer
          minimum: 5
          default: 30
        associated_port:
          type: integer
          minimum: 1
      required:
      - type
      - value
    HealthCheckRequestTypeEnum:
      enum:
      - PATH
      - COMMAND
      type: string
      description: |-
        * `PATH` - path
        * `COMMAND` - command
    HealthCheckTypeEnum:
      enum:
      - COMMAND
      - PATH
      type: string
      description: |-
        * `COMMAND` - Command
        * `PATH` - Path
    HealthcheckFieldChangeFieldEnum:
      enum:
      - healthcheck
      type: string
      description: '* `healthcheck` - healthcheck'
    HealthcheckFieldChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/HealthCheckRequestRequest'
          nullable: true
        field:
          $ref: '#/components/schemas/HealthcheckFieldChangeFieldEnum'
      required:
      - field
      - new_value
    HttpLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          type: integer
          maximum: 2147483647
          minimum: 0
        time:
          type: string
          format: date-time
        deployment_id:
          type: string
          nullable: true
        service_id:
          type: string
          nullable: true
        request_id:
          type: string
          nullable: true
          maxLength: 255
        request_ip:
          type: string
        request_path:
          type: string
          maxLength: 2000
        request_query:
          type: string
          nullable: true
          maxLength: 2000
        request_host:
          type: string
          format: uri
          maxLength: 1000
        request_protocol:
          $ref: '#/components/schemas/RequestProtocolEnum'
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        request_duration_ns:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        request_headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        response_headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        request_user_agent:
          type: string
          nullable: true
      required:
      - deployment_id
      - id
      - request_duration_ns
      - request_headers
      - request_host
      - request_id
      - request_ip
      - request_method
      - request_path
      - request_protocol
      - request_query
      - request_user_agent
      - response_headers
      - service_id
      - status
      - time
    ItemChangeTypeEnum:
      enum:
      - ADD
      - DELETE
      - UPDATE
      type: string
      description: |-
        * `ADD` - Add
        * `DELETE` - Delete
        * `UPDATE` - Update
    LevelEnum:
      enum:
      - ERROR
      - INFO
      type: string
      description: |-
        * `ERROR` - Error
        * `INFO` - Info
    ListGitAppRepositoriesError:
      oneOf:
      - $ref: '#/components/schemas/ListGitAppRepositoriesQueryErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          query: '#/components/schemas/ListGitAppRepositoriesQueryErrorComponent'
    ListGitAppRepositoriesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ListGitAppRepositoriesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ListGitAppRepositoriesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ListGitAppRepositoriesPaginatedError:
      oneOf:
      - $ref: '#/components/schemas/ListGitAppRepositoriesPaginatedQueryErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          query: '#/components/schemas/ListGitAppRepositoriesPaginatedQueryErrorComponent'
    ListGitAppRepositoriesPaginatedErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ListGitAppRepositoriesPaginatedValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ListGitAppRepositoriesPaginatedValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ListGitAppRepositoriesPaginatedQueryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - query
          type: string
          description: '* `query` - query'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ListGitAppRepositoriesPaginatedValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ListGitAppRepositoriesPaginatedError'
      required:
      - errors
      - type
    ListGitAppRepositoriesQueryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - query
          type: string
          description: '* `query` - query'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ListGitAppRepositoriesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ListGitAppRepositoriesError'
      required:
      - errors
      - type
    ListGitAppsErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ListGitRepoBranchesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginError:
      oneOf:
      - $ref: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LoginUsernameErrorComponent'
      - $ref: '#/components/schemas/LoginPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/LoginUsernameErrorComponent'
          password: '#/components/schemas/LoginPasswordErrorComponent'
    LoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - password
      - username
    LoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    LoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LoginError'
      required:
      - errors
      - type
    LogoutErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    MemoryLimit:
      type: object
      properties:
        value:
          type: integer
          minimum: 0
        unit:
          $ref: '#/components/schemas/UnitEnum'
      required:
      - unit
      - value
    MemoryLimitRequest:
      type: object
      properties:
        value:
          type: integer
          minimum: 0
        unit:
          $ref: '#/components/schemas/UnitEnum'
      required:
      - unit
      - value
    MemoryLimitRequestRequest:
      type: object
      properties:
        value:
          type: integer
          minimum: 0
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitEnum'
          default: MEGABYTES
      required:
      - value
    NixpacksBuilderOptions:
      type: object
      properties:
        publish_directory:
          type: string
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
        index_page:
          type: string
        generated_caddyfile:
          type: string
          readOnly: true
          nullable: true
        build_directory:
          type: string
          nullable: true
        custom_install_command:
          type: string
          nullable: true
        custom_build_command:
          type: string
          nullable: true
        custom_start_command:
          type: string
          nullable: true
        is_static:
          type: boolean
      required:
      - build_directory
      - custom_build_command
      - custom_install_command
      - custom_start_command
      - generated_caddyfile
      - index_page
      - is_spa
      - is_static
      - not_found_page
      - publish_directory
    NixpacksBuilderOptionsRequest:
      type: object
      properties:
        publish_directory:
          type: string
          minLength: 1
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
          minLength: 1
        index_page:
          type: string
          minLength: 1
        build_directory:
          type: string
          nullable: true
          minLength: 1
        custom_install_command:
          type: string
          nullable: true
          minLength: 1
        custom_build_command:
          type: string
          nullable: true
          minLength: 1
        custom_start_command:
          type: string
          nullable: true
          minLength: 1
        is_static:
          type: boolean
      required:
      - build_directory
      - custom_build_command
      - custom_install_command
      - custom_start_command
      - index_page
      - is_spa
      - is_static
      - not_found_page
      - publish_directory
    NullEnum:
      enum:
      - null
    PING:
      type: object
      properties:
        ping:
          $ref: '#/components/schemas/PingEnum'
      required:
      - ping
    PaginatedGitRepositoryList:
      type: object
      required:
      - count
      - next
      - previous
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitRepository'
    PaginatedHttpLogList:
      type: object
      required:
      - next
      - previous
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/HttpLog'
    PaginatedServiceDeploymentList:
      type: object
      required:
      - count
      - next
      - previous
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDeployment'
    ParseError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ParseErrorCodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
      description: '* `parse_error` - Parse Error'
    ParseErrorResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedGithubAppRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
    PatchedPreviewEnvTemplateRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        services_to_clone_ids:
          type: array
          items:
            type: string
            minLength: 1
            writeOnly: true
            default: []
          writeOnly: true
          default: []
        base_environment_id:
          type: string
          minLength: 1
          writeOnly: true
        clone_strategy:
          $ref: '#/components/schemas/CloneStrategyEnum'
        ttl_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        auto_teardown:
          type: boolean
        is_default:
          type: boolean
        preview_env_limit:
          type: integer
          maximum: 2147483647
          minimum: 1
        preview_root_domain:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
          minLength: 1
        auth_password:
          type: string
          nullable: true
          minLength: 1
        env_variables:
          type: string
          writeOnly: true
    PatchedProjectUpdateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    PatchedServiceRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        auto_deploy_enabled:
          type: boolean
        watch_paths:
          type: string
          nullable: true
          minLength: 1
          maxLength: 2048
        cleanup_queue_on_auto_deploy:
          type: boolean
        pr_preview_envs_enabled:
          type: boolean
    PatchedSharedEnvVariableRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
    PatchedUpdateEnvironmentRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
    PingEnum:
      enum:
      - pong
      type: string
      description: '* `pong` - pong'
    PingErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PortConfiguration:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        host:
          type: integer
          maximum: 2147483647
          minimum: 0
        forwarded:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - forwarded
      - host
      - id
    PortConfigurationRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        host:
          type: integer
          maximum: 2147483647
          minimum: 0
        forwarded:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - forwarded
    PortItemChangeFieldEnum:
      enum:
      - ports
      type: string
      description: '* `ports` - ports'
    PortItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/ServicePortsRequestRequest'
        field:
          $ref: '#/components/schemas/PortItemChangeFieldEnum'
      required:
      - field
      - type
    PreviewEnvTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        services_to_clone:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTemplateService'
          readOnly: true
        base_environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          readOnly: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/SharedEnvTemplate'
          readOnly: true
          default: []
        clone_strategy:
          $ref: '#/components/schemas/CloneStrategyEnum'
        ttl_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        auto_teardown:
          type: boolean
        is_default:
          type: boolean
        preview_env_limit:
          type: integer
          maximum: 2147483647
          minimum: 1
        preview_root_domain:
          type: string
          nullable: true
          maxLength: 1000
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
        auth_password:
          type: string
          nullable: true
      required:
      - auth_enabled
      - auth_password
      - auth_user
      - auto_teardown
      - base_environment
      - clone_strategy
      - id
      - is_default
      - preview_env_limit
      - preview_root_domain
      - services_to_clone
      - slug
      - ttl_seconds
      - variables
    PreviewEnvTemplateRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        services_to_clone_ids:
          type: array
          items:
            type: string
            minLength: 1
            writeOnly: true
            default: []
          writeOnly: true
          default: []
        base_environment_id:
          type: string
          minLength: 1
          writeOnly: true
        clone_strategy:
          $ref: '#/components/schemas/CloneStrategyEnum'
        ttl_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        auto_teardown:
          type: boolean
        is_default:
          type: boolean
        preview_env_limit:
          type: integer
          maximum: 2147483647
          minimum: 1
        preview_root_domain:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
          minLength: 1
        auth_password:
          type: string
          nullable: true
          minLength: 1
        env_variables:
          type: string
          writeOnly: true
      required:
      - base_environment_id
      - slug
    PreviewMetadata:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
        auth_password:
          type: string
          nullable: true
        source_trigger:
          $ref: '#/components/schemas/SourceTriggerEnum'
        head_repository_url:
          type: string
          format: uri
          maxLength: 200
        branch_name:
          type: string
          maxLength: 255
        commit_sha:
          type: string
          maxLength: 255
        external_url:
          type: string
          format: uri
          maxLength: 200
        pr_number:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
        pr_title:
          type: string
          nullable: true
          maxLength: 1000
        pr_author:
          type: string
          nullable: true
          maxLength: 1000
        pr_base_repo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        pr_base_branch_name:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        service:
          allOf:
          - $ref: '#/components/schemas/SimpleService'
          readOnly: true
        ttl_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        auto_teardown:
          type: boolean
        git_app:
          allOf:
          - $ref: '#/components/schemas/GitApp'
          readOnly: true
        deploy_state:
          $ref: '#/components/schemas/DeployStateEnum'
      required:
      - auth_enabled
      - auth_password
      - auth_user
      - auto_teardown
      - branch_name
      - commit_sha
      - deploy_state
      - external_url
      - git_app
      - head_repository_url
      - id
      - pr_author
      - pr_base_branch_name
      - pr_base_repo_url
      - pr_number
      - pr_title
      - service
      - source_trigger
      - ttl_seconds
    PreviewService:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        network_alias:
          type: string
          nullable: true
          maxLength: 300
      required:
      - id
      - network_alias
      - slug
    PreviewServiceRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        network_alias:
          type: string
          nullable: true
          minLength: 1
          maxLength: 300
      required:
      - slug
    Project:
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/SimpleEnvironment'
          readOnly: true
        description:
          type: string
          nullable: true
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        healthy_services:
          type: integer
          readOnly: true
        total_services:
          type: integer
          readOnly: true
      required:
      - created_at
      - description
      - environments
      - healthy_services
      - id
      - slug
      - total_services
      - updated_at
    ProjectCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    ProjectSearchResponse:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        type:
          allOf:
          - $ref: '#/components/schemas/ProjectSearchResponseTypeEnum'
          default: project
      required:
      - created_at
      - id
      - slug
      - type
    ProjectSearchResponseTypeEnum:
      enum:
      - project
      type: string
      description: '* `project` - project'
    ProjectsPreviewTemplatesCreateAuthEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_enabled
          type: string
          description: '* `auth_enabled` - auth_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateAuthPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_password
          type: string
          description: '* `auth_password` - auth_password'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateAuthUserErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_user
          type: string
          description: '* `auth_user` - auth_user'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateAutoTeardownErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auto_teardown
          type: string
          description: '* `auto_teardown` - auto_teardown'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateBaseEnvironmentIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - base_environment_id
          type: string
          description: '* `base_environment_id` - base_environment_id'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateCloneStrategyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - clone_strategy
          type: string
          description: '* `clone_strategy` - clone_strategy'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateEnvVariablesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables
          type: string
          description: '* `env_variables` - env_variables'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateSlugErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateServicesToCloneIdsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateBaseEnvironmentIdErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateCloneStrategyErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateTtlSecondsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateAutoTeardownErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateIsDefaultErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreatePreviewEnvLimitErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreatePreviewRootDomainErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthEnabledErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthUserErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthPasswordErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateEnvVariablesErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProjectsPreviewTemplatesCreateNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/ProjectsPreviewTemplatesCreateSlugErrorComponent'
          services_to_clone_ids: '#/components/schemas/ProjectsPreviewTemplatesCreateServicesToCloneIdsErrorComponent'
          base_environment_id: '#/components/schemas/ProjectsPreviewTemplatesCreateBaseEnvironmentIdErrorComponent'
          clone_strategy: '#/components/schemas/ProjectsPreviewTemplatesCreateCloneStrategyErrorComponent'
          ttl_seconds: '#/components/schemas/ProjectsPreviewTemplatesCreateTtlSecondsErrorComponent'
          auto_teardown: '#/components/schemas/ProjectsPreviewTemplatesCreateAutoTeardownErrorComponent'
          is_default: '#/components/schemas/ProjectsPreviewTemplatesCreateIsDefaultErrorComponent'
          preview_env_limit: '#/components/schemas/ProjectsPreviewTemplatesCreatePreviewEnvLimitErrorComponent'
          preview_root_domain: '#/components/schemas/ProjectsPreviewTemplatesCreatePreviewRootDomainErrorComponent'
          auth_enabled: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthEnabledErrorComponent'
          auth_user: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthUserErrorComponent'
          auth_password: '#/components/schemas/ProjectsPreviewTemplatesCreateAuthPasswordErrorComponent'
          env_variables: '#/components/schemas/ProjectsPreviewTemplatesCreateEnvVariablesErrorComponent'
    ProjectsPreviewTemplatesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsPreviewTemplatesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsPreviewTemplatesCreateIsDefaultErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_default
          type: string
          description: '* `is_default` - is_default'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreatePreviewEnvLimitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - preview_env_limit
          type: string
          description: '* `preview_env_limit` - preview_env_limit'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreatePreviewRootDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - preview_root_domain
          type: string
          description: '* `preview_root_domain` - preview_root_domain'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateServicesToCloneIdsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - services_to_clone_ids
          type: string
          description: '* `services_to_clone_ids` - services_to_clone_ids'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateTtlSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ttl_seconds
          type: string
          description: '* `ttl_seconds` - ttl_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsPreviewTemplatesCreateError'
      required:
      - errors
      - type
    ProjectsPreviewTemplatesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsPreviewTemplatesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsPreviewTemplatesPartialUpdateAuthEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_enabled
          type: string
          description: '* `auth_enabled` - auth_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateAuthPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_password
          type: string
          description: '* `auth_password` - auth_password'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateAuthUserErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auth_user
          type: string
          description: '* `auth_user` - auth_user'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateAutoTeardownErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auto_teardown
          type: string
          description: '* `auto_teardown` - auto_teardown'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateBaseEnvironmentIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - base_environment_id
          type: string
          description: '* `base_environment_id` - base_environment_id'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateCloneStrategyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - clone_strategy
          type: string
          description: '* `clone_strategy` - clone_strategy'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateEnvVariablesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables
          type: string
          description: '* `env_variables` - env_variables'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateSlugErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateServicesToCloneIdsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateBaseEnvironmentIdErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateCloneStrategyErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateTtlSecondsErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAutoTeardownErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateIsDefaultErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdatePreviewEnvLimitErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdatePreviewRootDomainErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthEnabledErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthUserErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthPasswordErrorComponent'
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateEnvVariablesErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateSlugErrorComponent'
          services_to_clone_ids: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateServicesToCloneIdsErrorComponent'
          base_environment_id: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateBaseEnvironmentIdErrorComponent'
          clone_strategy: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateCloneStrategyErrorComponent'
          ttl_seconds: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateTtlSecondsErrorComponent'
          auto_teardown: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAutoTeardownErrorComponent'
          is_default: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateIsDefaultErrorComponent'
          preview_env_limit: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdatePreviewEnvLimitErrorComponent'
          preview_root_domain: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdatePreviewRootDomainErrorComponent'
          auth_enabled: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthEnabledErrorComponent'
          auth_user: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthUserErrorComponent'
          auth_password: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateAuthPasswordErrorComponent'
          env_variables: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateEnvVariablesErrorComponent'
    ProjectsPreviewTemplatesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsPreviewTemplatesPartialUpdateIsDefaultErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_default
          type: string
          description: '* `is_default` - is_default'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdatePreviewEnvLimitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - preview_env_limit
          type: string
          description: '* `preview_env_limit` - preview_env_limit'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdatePreviewRootDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - preview_root_domain
          type: string
          description: '* `preview_root_domain` - preview_root_domain'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateServicesToCloneIdsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - services_to_clone_ids
          type: string
          description: '* `services_to_clone_ids` - services_to_clone_ids'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateTtlSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ttl_seconds
          type: string
          description: '* `ttl_seconds` - ttl_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsPreviewTemplatesPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsPreviewTemplatesPartialUpdateError'
      required:
      - errors
      - type
    ProjectsPreviewTemplatesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsBuildLogsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsHttpLogsFieldsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsHttpLogsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListTimeErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestMethodErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestQueryErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestIdErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          time: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListTimeErrorComponent'
          request_method: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestMethodErrorComponent'
          request_query: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestQueryErrorComponent'
          request_id: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListRequestIdErrorComponent'
          sort_by: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListSortByErrorComponent'
    ProjectsServiceDetailsDeploymentsHttpLogsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsHttpLogsListRequestIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_id
          type: string
          description: '* `request_id` - request_id'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsHttpLogsListRequestMethodErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_method
          type: string
          description: '* `request_method` - request_method'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsHttpLogsListRequestQueryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_query
          type: string
          description: '* `request_query` - request_query'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsHttpLogsListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsHttpLogsListTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - time
          type: string
          description: '* `time` - time'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsHttpLogsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsHttpLogsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDeploymentsHttpLogsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsListStatusErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsListQueuedAtErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          status: '#/components/schemas/ProjectsServiceDetailsDeploymentsListStatusErrorComponent'
          queued_at: '#/components/schemas/ProjectsServiceDetailsDeploymentsListQueuedAtErrorComponent'
    ProjectsServiceDetailsDeploymentsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDeploymentsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsListQueuedAtErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - queued_at
          type: string
          description: '* `queued_at` - queued_at'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsListStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDeploymentsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDeploymentsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDeploymentsMetricsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDeploymentsRuntimeLogsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsHttpLogsFieldsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsHttpLogsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListTimeErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestMethodErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestQueryErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestIdErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          time: '#/components/schemas/ProjectsServiceDetailsHttpLogsListTimeErrorComponent'
          request_method: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestMethodErrorComponent'
          request_query: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestQueryErrorComponent'
          request_id: '#/components/schemas/ProjectsServiceDetailsHttpLogsListRequestIdErrorComponent'
          sort_by: '#/components/schemas/ProjectsServiceDetailsHttpLogsListSortByErrorComponent'
    ProjectsServiceDetailsHttpLogsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsHttpLogsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsHttpLogsListRequestIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_id
          type: string
          description: '* `request_id` - request_id'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsHttpLogsListRequestMethodErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_method
          type: string
          description: '* `request_method` - request_method'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsHttpLogsListRequestQueryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - request_query
          type: string
          description: '* `request_query` - request_query'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsHttpLogsListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsHttpLogsListTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - time
          type: string
          description: '* `time` - time'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsHttpLogsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsHttpLogsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsHttpLogsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsMetricsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceListListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesCreateError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesCreateKeyErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesCreateValueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProjectsVariablesCreateNonFieldErrorsErrorComponent'
          key: '#/components/schemas/ProjectsVariablesCreateKeyErrorComponent'
          value: '#/components/schemas/ProjectsVariablesCreateValueErrorComponent'
    ProjectsVariablesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsVariablesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesCreateKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - key
          type: string
          description: '* `key` - key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsVariablesCreateError'
      required:
      - errors
      - type
    ProjectsVariablesCreateValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - value
          type: string
          description: '* `value` - value'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesPartialUpdateKeyErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesPartialUpdateValueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProjectsVariablesPartialUpdateNonFieldErrorsErrorComponent'
          key: '#/components/schemas/ProjectsVariablesPartialUpdateKeyErrorComponent'
          value: '#/components/schemas/ProjectsVariablesPartialUpdateValueErrorComponent'
    ProjectsVariablesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsVariablesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesPartialUpdateKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - key
          type: string
          description: '* `key` - key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsVariablesPartialUpdateError'
      required:
      - errors
      - type
    ProjectsVariablesPartialUpdateValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - value
          type: string
          description: '* `value` - value'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesUpdateKeyErrorComponent'
      - $ref: '#/components/schemas/ProjectsVariablesUpdateValueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProjectsVariablesUpdateNonFieldErrorsErrorComponent'
          key: '#/components/schemas/ProjectsVariablesUpdateKeyErrorComponent'
          value: '#/components/schemas/ProjectsVariablesUpdateValueErrorComponent'
    ProjectsVariablesUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsVariablesUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsVariablesUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsVariablesUpdateKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - key
          type: string
          description: '* `key` - key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsVariablesUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsVariablesUpdateError'
      required:
      - errors
      - type
    ProjectsVariablesUpdateValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - value
          type: string
          description: '* `value` - value'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RailpackBuilderOptions:
      type: object
      properties:
        publish_directory:
          type: string
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
        index_page:
          type: string
        generated_caddyfile:
          type: string
          readOnly: true
          nullable: true
        build_directory:
          type: string
          nullable: true
        custom_install_command:
          type: string
          nullable: true
        custom_build_command:
          type: string
          nullable: true
        custom_start_command:
          type: string
          nullable: true
        is_static:
          type: boolean
      required:
      - build_directory
      - custom_build_command
      - custom_install_command
      - custom_start_command
      - generated_caddyfile
      - index_page
      - is_spa
      - is_static
      - not_found_page
      - publish_directory
    RailpackBuilderOptionsRequest:
      type: object
      properties:
        publish_directory:
          type: string
          minLength: 1
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
          minLength: 1
        index_page:
          type: string
          minLength: 1
        build_directory:
          type: string
          nullable: true
          minLength: 1
        custom_install_command:
          type: string
          nullable: true
          minLength: 1
        custom_build_command:
          type: string
          nullable: true
          minLength: 1
        custom_start_command:
          type: string
          nullable: true
          minLength: 1
        is_static:
          type: boolean
      required:
      - build_directory
      - custom_build_command
      - custom_install_command
      - custom_start_command
      - index_page
      - is_spa
      - is_static
      - not_found_page
      - publish_directory
    ReDeployGitServiceError:
      oneOf:
      - $ref: '#/components/schemas/ReDeployGitServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ReDeployGitServiceIgnoreBuildCacheErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ReDeployGitServiceNonFieldErrorsErrorComponent'
          ignore_build_cache: '#/components/schemas/ReDeployGitServiceIgnoreBuildCacheErrorComponent'
    ReDeployGitServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ReDeployGitServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ReDeployGitServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ReDeployGitServiceIgnoreBuildCacheErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ignore_build_cache
          type: string
          description: '* `ignore_build_cache` - ignore_build_cache'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ReDeployGitServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ReDeployGitServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ReDeployGitServiceError'
      required:
      - errors
      - type
    RecentDeploymentsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RedeployDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RegenerateServiceDeployTokenAutoDeployEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auto_deploy_enabled
          type: string
          description: '* `auto_deploy_enabled` - auto_deploy_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RegenerateServiceDeployTokenCleanupQueueOnAutoDeployErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue_on_auto_deploy
          type: string
          description: '* `cleanup_queue_on_auto_deploy` - cleanup_queue_on_auto_deploy'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RegenerateServiceDeployTokenError:
      oneOf:
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenSlugErrorComponent'
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenAutoDeployEnabledErrorComponent'
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenWatchPathsErrorComponent'
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenCleanupQueueOnAutoDeployErrorComponent'
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenPrPreviewEnvsEnabledErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RegenerateServiceDeployTokenNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/RegenerateServiceDeployTokenSlugErrorComponent'
          auto_deploy_enabled: '#/components/schemas/RegenerateServiceDeployTokenAutoDeployEnabledErrorComponent'
          watch_paths: '#/components/schemas/RegenerateServiceDeployTokenWatchPathsErrorComponent'
          cleanup_queue_on_auto_deploy: '#/components/schemas/RegenerateServiceDeployTokenCleanupQueueOnAutoDeployErrorComponent'
          pr_preview_envs_enabled: '#/components/schemas/RegenerateServiceDeployTokenPrPreviewEnvsEnabledErrorComponent'
    RegenerateServiceDeployTokenErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RegenerateServiceDeployTokenValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RegenerateServiceDeployTokenValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RegenerateServiceDeployTokenNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RegenerateServiceDeployTokenPrPreviewEnvsEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - pr_preview_envs_enabled
          type: string
          description: '* `pr_preview_envs_enabled` - pr_preview_envs_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RegenerateServiceDeployTokenSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RegenerateServiceDeployTokenValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RegenerateServiceDeployTokenError'
      required:
      - errors
      - type
    RegenerateServiceDeployTokenWatchPathsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - watch_paths
          type: string
          description: '* `watch_paths` - watch_paths'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestEnvChangesError:
      oneOf:
      - $ref: '#/components/schemas/RequestEnvChangesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestEnvChangesNewValueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RequestEnvChangesNonFieldErrorsErrorComponent'
          new_value: '#/components/schemas/RequestEnvChangesNewValueErrorComponent'
    RequestEnvChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RequestEnvChangesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RequestEnvChangesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RequestEnvChangesNewValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value
          type: string
          description: '* `new_value` - new_value'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestEnvChangesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestEnvChangesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestEnvChangesError'
      required:
      - errors
      - type
    RequestMethodEnum:
      enum:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
      - HEAD
      type: string
      description: |-
        * `GET` - GET
        * `POST` - POST
        * `PUT` - PUT
        * `DELETE` - DELETE
        * `PATCH` - PATCH
        * `OPTIONS` - OPTIONS
        * `HEAD` - HEAD
    RequestProtocolEnum:
      enum:
      - HTTP/1.0
      - HTTP/1.1
      - HTTP/2.0
      - HTTP/3.0
      type: string
      description: |-
        * `HTTP/1.0` - HTTP/1.0
        * `HTTP/1.1` - HTTP/1.1
        * `HTTP/2.0` - HTTP/2.0
        * `HTTP/3.0` - HTTP/3.0
    RequestServiceChangesError:
      oneOf:
      - $ref: '#/components/schemas/RequestServiceChangesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesTypeErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesItemIdErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueDomainErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBasePathErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueStripPrefixErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueRedirectToNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueRedirectToUrlErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueRedirectToPermanentErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueAssociatedPortErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesFieldErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueNameErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueContainerPathErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueHostPathErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueModeErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueKeyErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueValueErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueHostErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueForwardedErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueImageErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCredentialsUsernameErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCredentialsPasswordErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueTypeErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueTimeoutSecondsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueIntervalSecondsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCpusErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueMemoryNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueMemoryValueErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueMemoryUnitErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueContentsErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueMountPathErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueLanguageErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueRepositoryUrlErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBranchNameErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCommitShaErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueGitAppIdErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBuilderErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBuildContextDirErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueDockerfilePathErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBuildStageTargetErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValuePublishDirectoryErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueIsSpaErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueNotFoundPageErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueIndexPageErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueIsStaticErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueBuildDirectoryErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCustomInstallCommandErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCustomBuildCommandErrorComponent'
      - $ref: '#/components/schemas/RequestServiceChangesNewValueCustomStartCommandErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RequestServiceChangesNonFieldErrorsErrorComponent'
          type: '#/components/schemas/RequestServiceChangesTypeErrorComponent'
          item_id: '#/components/schemas/RequestServiceChangesItemIdErrorComponent'
          new_value.non_field_errors: '#/components/schemas/RequestServiceChangesNewValueNonFieldErrorsErrorComponent'
          new_value.domain: '#/components/schemas/RequestServiceChangesNewValueDomainErrorComponent'
          new_value.base_path: '#/components/schemas/RequestServiceChangesNewValueBasePathErrorComponent'
          new_value.strip_prefix: '#/components/schemas/RequestServiceChangesNewValueStripPrefixErrorComponent'
          new_value.redirect_to.non_field_errors: '#/components/schemas/RequestServiceChangesNewValueRedirectToNonFieldErrorsErrorComponent'
          new_value.redirect_to.url: '#/components/schemas/RequestServiceChangesNewValueRedirectToUrlErrorComponent'
          new_value.redirect_to.permanent: '#/components/schemas/RequestServiceChangesNewValueRedirectToPermanentErrorComponent'
          new_value.associated_port: '#/components/schemas/RequestServiceChangesNewValueAssociatedPortErrorComponent'
          field: '#/components/schemas/RequestServiceChangesFieldErrorComponent'
          new_value.name: '#/components/schemas/RequestServiceChangesNewValueNameErrorComponent'
          new_value.container_path: '#/components/schemas/RequestServiceChangesNewValueContainerPathErrorComponent'
          new_value.host_path: '#/components/schemas/RequestServiceChangesNewValueHostPathErrorComponent'
          new_value.mode: '#/components/schemas/RequestServiceChangesNewValueModeErrorComponent'
          new_value.key: '#/components/schemas/RequestServiceChangesNewValueKeyErrorComponent'
          new_value.value: '#/components/schemas/RequestServiceChangesNewValueValueErrorComponent'
          new_value.host: '#/components/schemas/RequestServiceChangesNewValueHostErrorComponent'
          new_value.forwarded: '#/components/schemas/RequestServiceChangesNewValueForwardedErrorComponent'
          new_value.image: '#/components/schemas/RequestServiceChangesNewValueImageErrorComponent'
          new_value.credentials.non_field_errors: '#/components/schemas/RequestServiceChangesNewValueCredentialsNonFieldErrorsErrorComponent'
          new_value.credentials.username: '#/components/schemas/RequestServiceChangesNewValueCredentialsUsernameErrorComponent'
          new_value.credentials.password: '#/components/schemas/RequestServiceChangesNewValueCredentialsPasswordErrorComponent'
          new_value: '#/components/schemas/RequestServiceChangesNewValueErrorComponent'
          new_value.type: '#/components/schemas/RequestServiceChangesNewValueTypeErrorComponent'
          new_value.timeout_seconds: '#/components/schemas/RequestServiceChangesNewValueTimeoutSecondsErrorComponent'
          new_value.interval_seconds: '#/components/schemas/RequestServiceChangesNewValueIntervalSecondsErrorComponent'
          new_value.cpus: '#/components/schemas/RequestServiceChangesNewValueCpusErrorComponent'
          new_value.memory.non_field_errors: '#/components/schemas/RequestServiceChangesNewValueMemoryNonFieldErrorsErrorComponent'
          new_value.memory.value: '#/components/schemas/RequestServiceChangesNewValueMemoryValueErrorComponent'
          new_value.memory.unit: '#/components/schemas/RequestServiceChangesNewValueMemoryUnitErrorComponent'
          new_value.contents: '#/components/schemas/RequestServiceChangesNewValueContentsErrorComponent'
          new_value.mount_path: '#/components/schemas/RequestServiceChangesNewValueMountPathErrorComponent'
          new_value.language: '#/components/schemas/RequestServiceChangesNewValueLanguageErrorComponent'
          new_value.repository_url: '#/components/schemas/RequestServiceChangesNewValueRepositoryUrlErrorComponent'
          new_value.branch_name: '#/components/schemas/RequestServiceChangesNewValueBranchNameErrorComponent'
          new_value.commit_sha: '#/components/schemas/RequestServiceChangesNewValueCommitShaErrorComponent'
          new_value.git_app_id: '#/components/schemas/RequestServiceChangesNewValueGitAppIdErrorComponent'
          new_value.builder: '#/components/schemas/RequestServiceChangesNewValueBuilderErrorComponent'
          new_value.build_context_dir: '#/components/schemas/RequestServiceChangesNewValueBuildContextDirErrorComponent'
          new_value.dockerfile_path: '#/components/schemas/RequestServiceChangesNewValueDockerfilePathErrorComponent'
          new_value.build_stage_target: '#/components/schemas/RequestServiceChangesNewValueBuildStageTargetErrorComponent'
          new_value.publish_directory: '#/components/schemas/RequestServiceChangesNewValuePublishDirectoryErrorComponent'
          new_value.is_spa: '#/components/schemas/RequestServiceChangesNewValueIsSpaErrorComponent'
          new_value.not_found_page: '#/components/schemas/RequestServiceChangesNewValueNotFoundPageErrorComponent'
          new_value.index_page: '#/components/schemas/RequestServiceChangesNewValueIndexPageErrorComponent'
          new_value.is_static: '#/components/schemas/RequestServiceChangesNewValueIsStaticErrorComponent'
          new_value.build_directory: '#/components/schemas/RequestServiceChangesNewValueBuildDirectoryErrorComponent'
          new_value.custom_install_command: '#/components/schemas/RequestServiceChangesNewValueCustomInstallCommandErrorComponent'
          new_value.custom_build_command: '#/components/schemas/RequestServiceChangesNewValueCustomBuildCommandErrorComponent'
          new_value.custom_start_command: '#/components/schemas/RequestServiceChangesNewValueCustomStartCommandErrorComponent'
    RequestServiceChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RequestServiceChangesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RequestServiceChangesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RequestServiceChangesFieldErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - field
          type: string
          description: '* `field` - field'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - item_id
          type: string
          description: '* `item_id` - item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueAssociatedPortErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.associated_port
          type: string
          description: '* `new_value.associated_port` - new_value.associated_port'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBasePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.base_path
          type: string
          description: '* `new_value.base_path` - new_value.base_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBranchNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.branch_name
          type: string
          description: '* `new_value.branch_name` - new_value.branch_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBuildContextDirErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.build_context_dir
          type: string
          description: '* `new_value.build_context_dir` - new_value.build_context_dir'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBuildDirectoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.build_directory
          type: string
          description: '* `new_value.build_directory` - new_value.build_directory'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBuildStageTargetErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.build_stage_target
          type: string
          description: '* `new_value.build_stage_target` - new_value.build_stage_target'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueBuilderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.builder
          type: string
          description: '* `new_value.builder` - new_value.builder'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCommitShaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.commit_sha
          type: string
          description: '* `new_value.commit_sha` - new_value.commit_sha'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueContainerPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.container_path
          type: string
          description: '* `new_value.container_path` - new_value.container_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueContentsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.contents
          type: string
          description: '* `new_value.contents` - new_value.contents'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCpusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.cpus
          type: string
          description: '* `new_value.cpus` - new_value.cpus'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.credentials.non_field_errors
          type: string
          description: '* `new_value.credentials.non_field_errors` - new_value.credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCredentialsPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.credentials.password
          type: string
          description: '* `new_value.credentials.password` - new_value.credentials.password'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCredentialsUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.credentials.username
          type: string
          description: '* `new_value.credentials.username` - new_value.credentials.username'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCustomBuildCommandErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.custom_build_command
          type: string
          description: '* `new_value.custom_build_command` - new_value.custom_build_command'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCustomInstallCommandErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.custom_install_command
          type: string
          description: '* `new_value.custom_install_command` - new_value.custom_install_command'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueCustomStartCommandErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.custom_start_command
          type: string
          description: '* `new_value.custom_start_command` - new_value.custom_start_command'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueDockerfilePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.dockerfile_path
          type: string
          description: '* `new_value.dockerfile_path` - new_value.dockerfile_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.domain
          type: string
          description: '* `new_value.domain` - new_value.domain'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value
          type: string
          description: '* `new_value` - new_value'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueForwardedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.forwarded
          type: string
          description: '* `new_value.forwarded` - new_value.forwarded'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueGitAppIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.git_app_id
          type: string
          description: '* `new_value.git_app_id` - new_value.git_app_id'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueHostErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.host
          type: string
          description: '* `new_value.host` - new_value.host'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueHostPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.host_path
          type: string
          description: '* `new_value.host_path` - new_value.host_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.image
          type: string
          description: '* `new_value.image` - new_value.image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueIndexPageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.index_page
          type: string
          description: '* `new_value.index_page` - new_value.index_page'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueIntervalSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.interval_seconds
          type: string
          description: '* `new_value.interval_seconds` - new_value.interval_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueIsSpaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.is_spa
          type: string
          description: '* `new_value.is_spa` - new_value.is_spa'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueIsStaticErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.is_static
          type: string
          description: '* `new_value.is_static` - new_value.is_static'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.key
          type: string
          description: '* `new_value.key` - new_value.key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueLanguageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.language
          type: string
          description: '* `new_value.language` - new_value.language'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueMemoryNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.non_field_errors
          type: string
          description: '* `new_value.memory.non_field_errors` - new_value.memory.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueMemoryUnitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.unit
          type: string
          description: '* `new_value.memory.unit` - new_value.memory.unit'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueMemoryValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.memory.value
          type: string
          description: '* `new_value.memory.value` - new_value.memory.value'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueModeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.mode
          type: string
          description: '* `new_value.mode` - new_value.mode'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueMountPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.mount_path
          type: string
          description: '* `new_value.mount_path` - new_value.mount_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.name
          type: string
          description: '* `new_value.name` - new_value.name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.non_field_errors
          type: string
          description: '* `new_value.non_field_errors` - new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueNotFoundPageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.not_found_page
          type: string
          description: '* `new_value.not_found_page` - new_value.not_found_page'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValuePublishDirectoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.publish_directory
          type: string
          description: '* `new_value.publish_directory` - new_value.publish_directory'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueRedirectToNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.non_field_errors
          type: string
          description: '* `new_value.redirect_to.non_field_errors` - new_value.redirect_to.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueRedirectToPermanentErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.permanent
          type: string
          description: '* `new_value.redirect_to.permanent` - new_value.redirect_to.permanent'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueRedirectToUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.redirect_to.url
          type: string
          description: '* `new_value.redirect_to.url` - new_value.redirect_to.url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueRepositoryUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.repository_url
          type: string
          description: '* `new_value.repository_url` - new_value.repository_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueStripPrefixErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.strip_prefix
          type: string
          description: '* `new_value.strip_prefix` - new_value.strip_prefix'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueTimeoutSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.timeout_seconds
          type: string
          description: '* `new_value.timeout_seconds` - new_value.timeout_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.type
          type: string
          description: '* `new_value.type` - new_value.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNewValueValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_value.value
          type: string
          description: '* `new_value.value` - new_value.value'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - type
          type: string
          description: '* `type` - type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RequestServiceChangesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestServiceChangesError'
      required:
      - errors
      - type
    ResourceLimit:
      type: object
      properties:
        no_of_cpus:
          type: integer
        max_memory_in_bytes:
          type: integer
      required:
      - max_memory_in_bytes
      - no_of_cpus
    ResourceLimitChangeFieldEnum:
      enum:
      - resource_limits
      type: string
      description: '* `resource_limits` - resource_limits'
    ResourceLimitChangeRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FieldChangeTypeEnum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/ResourceLimitsRequestRequest'
          nullable: true
        field:
          $ref: '#/components/schemas/ResourceLimitChangeFieldEnum'
      required:
      - field
      - new_value
    ResourceLimits:
      type: object
      properties:
        cpus:
          type: number
          format: double
          nullable: true
        memory:
          allOf:
          - $ref: '#/components/schemas/MemoryLimit'
          nullable: true
      required:
      - cpus
      - memory
    ResourceLimitsRequest:
      type: object
      properties:
        cpus:
          type: number
          format: double
          nullable: true
        memory:
          allOf:
          - $ref: '#/components/schemas/MemoryLimitRequest'
          nullable: true
      required:
      - cpus
      - memory
    ResourceLimitsRequestRequest:
      type: object
      properties:
        cpus:
          type: number
          format: double
          minimum: 0.1
        memory:
          $ref: '#/components/schemas/MemoryLimitRequestRequest'
    ResourceResponse:
      oneOf:
      - $ref: '#/components/schemas/EnvironmentSearchResponse'
      - $ref: '#/components/schemas/ServiceSearchResponse'
      - $ref: '#/components/schemas/ProjectSearchResponse'
      discriminator:
        propertyName: type
        mapping:
          null: '#/components/schemas/ProjectSearchResponse'
    ReviewPreviewEnvDeployDecisionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - decision
          type: string
          description: '* `decision` - decision'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ReviewPreviewEnvDeployError:
      oneOf:
      - $ref: '#/components/schemas/ReviewPreviewEnvDeployNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ReviewPreviewEnvDeployDecisionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ReviewPreviewEnvDeployNonFieldErrorsErrorComponent'
          decision: '#/components/schemas/ReviewPreviewEnvDeployDecisionErrorComponent'
    ReviewPreviewEnvDeployErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ReviewPreviewEnvDeployValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ReviewPreviewEnvDeployValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ReviewPreviewEnvDeployNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ReviewPreviewEnvDeployValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ReviewPreviewEnvDeployError'
      required:
      - errors
      - type
    ReviewPreviewEnvDeploymentRequestRequest:
      type: object
      properties:
        decision:
          $ref: '#/components/schemas/DecisionEnum'
      required:
      - decision
    RuntimeLog:
      type: object
      properties:
        id:
          type: string
        service_id:
          type: string
          nullable: true
        deployment_id:
          type: string
          nullable: true
        time:
          type: string
          format: date-time
        timestamp:
          type: integer
        content:
          nullable: true
        content_text:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelEnum'
        source:
          $ref: '#/components/schemas/SourceEnum'
      required:
      - content
      - content_text
      - deployment_id
      - id
      - level
      - service_id
      - source
      - time
      - timestamp
    RuntimeLogsSearch:
      type: object
      properties:
        previous:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeLog'
        query_time_ms:
          type: number
          format: double
      required:
      - next
      - previous
      - query_time_ms
      - results
    SSHKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          maxLength: 255
        public_key:
          type: string
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        fingerprint:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - fingerprint
      - id
      - public_key
      - slug
      - updated_at
      - user
    SearchDockerRegistryErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SearchResourcesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Service:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceTypeEnum'
          readOnly: true
        image:
          type: string
          readOnly: true
          nullable: true
          maxLength: 510
        command:
          type: string
          readOnly: true
          nullable: true
        builder:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GitServiceBuilderEnum'
          - $ref: '#/components/schemas/NullEnum'
        repository_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          maxLength: 2048
        branch_name:
          type: string
          readOnly: true
          nullable: true
          maxLength: 255
        commit_sha:
          type: string
          readOnly: true
          nullable: true
          maxLength: 45
        dockerfile_builder_options:
          allOf:
          - $ref: '#/components/schemas/DockerfileBuilderOptions'
          readOnly: true
          nullable: true
        static_dir_builder_options:
          allOf:
          - $ref: '#/components/schemas/StaticDirectoryBuilderOptions'
          readOnly: true
          nullable: true
        nixpacks_builder_options:
          allOf:
          - $ref: '#/components/schemas/NixpacksBuilderOptions'
          readOnly: true
          nullable: true
        railpack_builder_options:
          allOf:
          - $ref: '#/components/schemas/RailpackBuilderOptions'
          readOnly: true
          nullable: true
        healthcheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          readOnly: true
          nullable: true
        project_id:
          type: string
          readOnly: true
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          readOnly: true
        credentials:
          allOf:
          - $ref: '#/components/schemas/DockerCredential'
          readOnly: true
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        deploy_token:
          type: string
          readOnly: true
          nullable: true
          maxLength: 35
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/EnvVariable'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        network_alias:
          type: string
          readOnly: true
          nullable: true
          maxLength: 300
        global_network_alias:
          type: string
          readOnly: true
        unapplied_changes:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentChange'
          readOnly: true
        resource_limits:
          allOf:
          - $ref: '#/components/schemas/ResourceLimits'
          readOnly: true
          nullable: true
        system_env_variables:
          type: array
          items:
            $ref: '#/components/schemas/SystemEnvVariables'
          readOnly: true
          default: []
        configs:
          type: array
          items:
            $ref: '#/components/schemas/Config'
          readOnly: true
        git_app:
          allOf:
          - $ref: '#/components/schemas/GitApp'
          readOnly: true
          nullable: true
        git_repository:
          allOf:
          - $ref: '#/components/schemas/GitRepository'
          readOnly: true
          nullable: true
        next_git_repository:
          allOf:
          - $ref: '#/components/schemas/GitRepository'
          readOnly: true
          nullable: true
        auto_deploy_enabled:
          type: boolean
        watch_paths:
          type: string
          nullable: true
          maxLength: 2048
        cleanup_queue_on_auto_deploy:
          type: boolean
        pr_preview_envs_enabled:
          type: boolean
      required:
      - auto_deploy_enabled
      - branch_name
      - builder
      - cleanup_queue_on_auto_deploy
      - command
      - commit_sha
      - configs
      - created_at
      - credentials
      - deploy_token
      - dockerfile_builder_options
      - env_variables
      - environment
      - git_app
      - git_repository
      - global_network_alias
      - healthcheck
      - id
      - image
      - network_alias
      - network_aliases
      - next_git_repository
      - nixpacks_builder_options
      - ports
      - pr_preview_envs_enabled
      - project_id
      - railpack_builder_options
      - repository_url
      - resource_limits
      - slug
      - static_dir_builder_options
      - system_env_variables
      - type
      - unapplied_changes
      - updated_at
      - urls
      - volumes
      - watch_paths
    ServiceCardResponse:
      oneOf:
      - $ref: '#/components/schemas/DockerServiceCard'
      - $ref: '#/components/schemas/GitServiceCard'
      discriminator:
        propertyName: type
        mapping:
          null: '#/components/schemas/GitServiceCard'
    ServiceDeployment:
      type: object
      properties:
        is_current_production:
          type: boolean
        slot:
          $ref: '#/components/schemas/SlotEnum'
        queued_at:
          type: string
          format: date-time
          readOnly: true
        ignore_build_cache:
          type: boolean
        started_at:
          type: string
          format: date-time
          nullable: true
        finished_at:
          type: string
          format: date-time
          nullable: true
        redeploy_hash:
          type: string
          readOnly: true
          nullable: true
        trigger_method:
          $ref: '#/components/schemas/TriggerMethodEnum'
        hash:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/DeploymentStatusEnum'
        status_reason:
          type: string
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDeploymentURL'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        unprefixed_hash:
          type: string
          readOnly: true
        service_snapshot:
          $ref: '#/components/schemas/DeploymentDocker'
        changes:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentChange'
          readOnly: true
        commit_message:
          type: string
        commit_author_name:
          type: string
          nullable: true
          maxLength: 1024
        commit_sha:
          type: string
          nullable: true
          maxLength: 45
        build_started_at:
          type: string
          format: date-time
          nullable: true
        build_finished_at:
          type: string
          format: date-time
          nullable: true
      required:
      - build_finished_at
      - build_started_at
      - changes
      - commit_author_name
      - commit_message
      - commit_sha
      - finished_at
      - hash
      - ignore_build_cache
      - is_current_production
      - network_aliases
      - queued_at
      - redeploy_hash
      - service_snapshot
      - slot
      - started_at
      - status
      - status_reason
      - trigger_method
      - unprefixed_hash
      - urls
    ServiceDeploymentURL:
      type: object
      properties:
        domain:
          type: string
          format: uri
          maxLength: 200
        port:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - domain
      - port
    ServiceMetrics:
      type: object
      properties:
        bucket_epoch:
          type: string
          format: date-time
        avg_cpu:
          type: number
          format: double
        avg_memory:
          type: number
          format: double
        total_net_tx:
          type: integer
        total_net_rx:
          type: integer
        total_disk_read:
          type: integer
        total_disk_write:
          type: integer
      required:
      - avg_cpu
      - avg_memory
      - bucket_epoch
      - total_disk_read
      - total_disk_write
      - total_net_rx
      - total_net_tx
    ServicePortsRequestRequest:
      type: object
      properties:
        host:
          type: integer
          minimum: 1
        forwarded:
          type: integer
          minimum: 1
      required:
      - forwarded
      - host
    ServiceSearchResponse:
      type: object
      properties:
        id:
          type: string
        project_slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        git_provider:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ServiceSearchResponseGitProviderEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_at:
          type: string
          format: date-time
        kind:
          $ref: '#/components/schemas/ServiceTypeEnum'
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceSearchResponseTypeEnum'
          default: service
        environment:
          type: string
      required:
      - created_at
      - environment
      - git_provider
      - id
      - kind
      - project_slug
      - slug
      - type
    ServiceSearchResponseGitProviderEnum:
      enum:
      - github
      - gitlab
      type: string
      description: |-
        * `github` - github
        * `gitlab` - gitlab
    ServiceSearchResponseTypeEnum:
      enum:
      - service
      type: string
      description: '* `service` - service'
    ServiceStatusEnum:
      enum:
      - HEALTHY
      - UNHEALTHY
      - FAILED
      - SLEEPING
      - NOT_DEPLOYED_YET
      - DEPLOYING
      type: string
      description: |-
        * `HEALTHY` - Healthy
        * `UNHEALTHY` - Unhealthy
        * `FAILED` - Failed
        * `SLEEPING` - Sleeping
        * `NOT_DEPLOYED_YET` - Not deployed yet
        * `DEPLOYING` - Deploying
    ServiceTypeEnum:
      enum:
      - DOCKER_REGISTRY
      - GIT_REPOSITORY
      type: string
      description: |-
        * `DOCKER_REGISTRY` - Docker repository
        * `GIT_REPOSITORY` - Git repository
    Settings:
      type: object
      properties:
        root_domain:
          type: string
        app_domain:
          type: string
        image_version:
          type: string
        commit_sha:
          type: string
      required:
      - app_domain
      - commit_sha
      - image_version
      - root_domain
    SetupGithubAppErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SetupGitlabAppErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SharedEnvTemplate:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          maxLength: 255
        key:
          type: string
          maxLength: 255
        value:
          type: string
      required:
      - id
      - key
      - value
    SharedEnvTemplateRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
          maxLength: 255
        value:
          type: string
      required:
      - key
    SharedEnvVariable:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        key:
          type: string
        value:
          type: string
      required:
      - id
      - key
      - value
    SharedEnvVariableRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
      required:
      - key
    ShellSshKeysDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ShellSshKeysRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SimpleDeployment:
      type: object
      properties:
        is_current_production:
          type: boolean
        queued_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          nullable: true
        finished_at:
          type: string
          format: date-time
          nullable: true
        hash:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/DeploymentStatusEnum'
        unprefixed_hash:
          type: string
          readOnly: true
        commit_message:
          type: string
        service:
          allOf:
          - $ref: '#/components/schemas/SimpleService'
          readOnly: true
      required:
      - commit_message
      - finished_at
      - hash
      - is_current_production
      - queued_at
      - service
      - started_at
      - status
      - unprefixed_hash
    SimpleEnvironment:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        is_preview:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_preview
      - name
    SimplePreviewMetadata:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
        auth_password:
          type: string
          nullable: true
        pr_number:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
        pr_comment_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          nullable: true
        source_trigger:
          $ref: '#/components/schemas/SourceTriggerEnum'
        service:
          $ref: '#/components/schemas/PreviewService'
      required:
      - auth_enabled
      - auth_password
      - auth_user
      - id
      - pr_comment_id
      - pr_number
      - service
      - source_trigger
    SimplePreviewMetadataRequest:
      type: object
      properties:
        auth_enabled:
          type: boolean
        auth_user:
          type: string
          nullable: true
          minLength: 1
        auth_password:
          type: string
          nullable: true
          minLength: 1
        pr_number:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
        pr_comment_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          nullable: true
        source_trigger:
          $ref: '#/components/schemas/SourceTriggerEnum'
        service:
          $ref: '#/components/schemas/PreviewServiceRequest'
      required:
      - service
      - source_trigger
    SimpleProject:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - slug
    SimpleService:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        project:
          allOf:
          - $ref: '#/components/schemas/SimpleProject'
          readOnly: true
        environment:
          allOf:
          - $ref: '#/components/schemas/SimpleEnvironment'
          readOnly: true
      required:
      - environment
      - id
      - project
      - slug
    SimpleTemplateService:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - slug
    SimpleTemplateServiceRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
    SlotEnum:
      enum:
      - BLUE
      - GREEN
      type: string
      description: |-
        * `BLUE` - Blue
        * `GREEN` - Green
    SourceEnum:
      enum:
      - SYSTEM
      - SERVICE
      type: string
      description: |-
        * `SYSTEM` - System Logs
        * `SERVICE` - Service Logs
    SourceTriggerEnum:
      enum:
      - API
      - PULL_REQUEST
      type: string
      description: |-
        * `API` - Api
        * `PULL_REQUEST` - Pull request
    StaticDirectoryBuilderOptions:
      type: object
      properties:
        publish_directory:
          type: string
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
        index_page:
          type: string
        generated_caddyfile:
          type: string
          readOnly: true
          nullable: true
      required:
      - generated_caddyfile
      - index_page
      - is_spa
      - not_found_page
      - publish_directory
    StaticDirectoryBuilderOptionsRequest:
      type: object
      properties:
        publish_directory:
          type: string
          minLength: 1
        is_spa:
          type: boolean
        not_found_page:
          type: string
          nullable: true
          minLength: 1
        index_page:
          type: string
          minLength: 1
      required:
      - index_page
      - is_spa
      - not_found_page
      - publish_directory
    SyncGitlabReposErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SyncGitlabRepositoriesResponse:
      type: object
      properties:
        repositories_count:
          type: integer
      required:
      - repositories_count
    SystemEnvVariables:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        comment:
          type: string
      required:
      - comment
      - key
      - value
    SystemEnvVariablesRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
        comment:
          type: string
          minLength: 1
      required:
      - comment
      - key
      - value
    TestGithubAppErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    TestGithubAppResponse:
      type: object
      properties:
        repositories_count:
          type: integer
      required:
      - repositories_count
    TestGitlabAppErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    TestGitlabAppResponse:
      type: object
      properties:
        repositories_count:
          type: integer
      required:
      - repositories_count
    ToggleServiceDesiredStateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - desired_state
          type: string
          description: '* `desired_state` - desired_state'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ToggleServiceError:
      oneOf:
      - $ref: '#/components/schemas/ToggleServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ToggleServiceDesiredStateErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ToggleServiceNonFieldErrorsErrorComponent'
          desired_state: '#/components/schemas/ToggleServiceDesiredStateErrorComponent'
    ToggleServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ToggleServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ToggleServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ToggleServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ToggleServiceStateRequestRequest:
      type: object
      properties:
        desired_state:
          $ref: '#/components/schemas/DesiredStateEnum'
      required:
      - desired_state
    ToggleServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ToggleServiceError'
      required:
      - errors
      - type
    TriggerMethodEnum:
      enum:
      - MANUAL
      - AUTO
      - API
      type: string
      description: |-
        * `MANUAL` - Manual
        * `AUTO` - Automatic
        * `API` - API
    TriggerPreviewEnvRequestRequest:
      type: object
      properties:
        branch_name:
          type: string
          minLength: 1
        commit_sha:
          type: string
          minLength: 1
          default: HEAD
        template:
          type: string
          minLength: 1
      required:
      - branch_name
    TriggerUpdateCreateDesiredVersionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - desired_version
          type: string
          description: '* `desired_version` - desired_version'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TriggerUpdateCreateError:
      oneOf:
      - $ref: '#/components/schemas/TriggerUpdateCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/TriggerUpdateCreateDesiredVersionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/TriggerUpdateCreateNonFieldErrorsErrorComponent'
          desired_version: '#/components/schemas/TriggerUpdateCreateDesiredVersionErrorComponent'
    TriggerUpdateCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/TriggerUpdateCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/TriggerUpdateCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    TriggerUpdateCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TriggerUpdateCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TriggerUpdateCreateError'
      required:
      - errors
      - type
    URLItemChangeFieldEnum:
      enum:
      - urls
      type: string
      description: '* `urls` - urls'
    URLItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/URLRequestRequest'
        field:
          $ref: '#/components/schemas/URLItemChangeFieldEnum'
      required:
      - field
      - type
    URLModel:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        domain:
          type: string
          maxLength: 1000
        base_path:
          type: string
          default: /
        strip_prefix:
          type: boolean
        redirect_to:
          allOf:
          - $ref: '#/components/schemas/URLRedirectModel'
          nullable: true
        associated_port:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
      required:
      - associated_port
      - base_path
      - domain
      - id
      - redirect_to
      - strip_prefix
    URLModelRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        domain:
          type: string
          minLength: 1
          maxLength: 1000
        base_path:
          type: string
          minLength: 1
          default: /
        strip_prefix:
          type: boolean
        redirect_to:
          allOf:
          - $ref: '#/components/schemas/URLRedirectModelRequest'
          nullable: true
        associated_port:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
      required:
      - domain
      - redirect_to
    URLRedirectModel:
      type: object
      properties:
        url:
          type: string
          format: uri
        permanent:
          type: boolean
          default: false
      required:
      - permanent
      - url
    URLRedirectModelRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        permanent:
          type: boolean
          default: false
      required:
      - url
    URLRedirectRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        permanent:
          type: boolean
          default: false
      required:
      - url
    URLRequestRequest:
      type: object
      properties:
        domain:
          type: string
          minLength: 1
        base_path:
          type: string
          minLength: 1
          default: /
        strip_prefix:
          type: boolean
          default: true
        redirect_to:
          $ref: '#/components/schemas/URLRedirectRequest'
        associated_port:
          type: integer
          minimum: 1
    UnitEnum:
      enum:
      - BYTES
      - KILOBYTES
      - MEGABYTES
      - GIGABYTES
      type: string
      description: |-
        * `BYTES` - bytes
        * `KILOBYTES` - kilobytes
        * `MEGABYTES` - megabytes
        * `GIGABYTES` - gigabytes
    UpdateEnvironmentError:
      oneOf:
      - $ref: '#/components/schemas/UpdateEnvironmentNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateEnvironmentNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateEnvironmentNonFieldErrorsErrorComponent'
          name: '#/components/schemas/UpdateEnvironmentNameErrorComponent'
    UpdateEnvironmentErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateEnvironmentValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateEnvironmentValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateEnvironmentNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateEnvironmentNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateEnvironmentValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateEnvironmentError'
      required:
      - errors
      - type
    UpdateProjectDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectError:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectSlugErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/UpdateProjectSlugErrorComponent'
          description: '#/components/schemas/UpdateProjectDescriptionErrorComponent'
    UpdateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProjectError'
      required:
      - errors
      - type
    UpdateServiceAutoDeployEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - auto_deploy_enabled
          type: string
          description: '* `auto_deploy_enabled` - auto_deploy_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateServiceCleanupQueueOnAutoDeployErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue_on_auto_deploy
          type: string
          description: '* `cleanup_queue_on_auto_deploy` - cleanup_queue_on_auto_deploy'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateServiceError:
      oneOf:
      - $ref: '#/components/schemas/UpdateServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateServiceSlugErrorComponent'
      - $ref: '#/components/schemas/UpdateServiceAutoDeployEnabledErrorComponent'
      - $ref: '#/components/schemas/UpdateServiceWatchPathsErrorComponent'
      - $ref: '#/components/schemas/UpdateServiceCleanupQueueOnAutoDeployErrorComponent'
      - $ref: '#/components/schemas/UpdateServicePrPreviewEnvsEnabledErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/UpdateServiceSlugErrorComponent'
          auto_deploy_enabled: '#/components/schemas/UpdateServiceAutoDeployEnabledErrorComponent'
          watch_paths: '#/components/schemas/UpdateServiceWatchPathsErrorComponent'
          cleanup_queue_on_auto_deploy: '#/components/schemas/UpdateServiceCleanupQueueOnAutoDeployErrorComponent'
          pr_preview_envs_enabled: '#/components/schemas/UpdateServicePrPreviewEnvsEnabledErrorComponent'
    UpdateServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateServicePrPreviewEnvsEnabledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - pr_preview_envs_enabled
          type: string
          description: '* `pr_preview_envs_enabled` - pr_preview_envs_enabled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateServiceError'
      required:
      - errors
      - type
    UpdateServiceWatchPathsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - watch_paths
          type: string
          description: '* `watch_paths` - watch_paths'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - first_name
      - last_name
      - username
    UserCreatedResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    UserCreationRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 8
      required:
      - password
      - username
    UserExistenceResponse:
      type: object
      properties:
        exists:
          type: boolean
      required:
      - exists
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
      description: '* `validation_error` - Validation Error'
    Volume:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
          minLength: 1
        container_path:
          type: string
          maxLength: 255
        host_path:
          type: string
          nullable: true
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeModeEnum'
      required:
      - container_path
      - host_path
      - id
      - mode
      - name
    VolumeItemChangeFieldEnum:
      enum:
      - volumes
      type: string
      description: '* `volumes` - volumes'
    VolumeItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemChangeTypeEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/VolumeRequestRequest'
        field:
          $ref: '#/components/schemas/VolumeItemChangeFieldEnum'
      required:
      - field
      - type
    VolumeModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - Read-Only
        * `READ_WRITE` - Read-Write
    VolumeRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        container_path:
          type: string
          minLength: 1
          maxLength: 255
        host_path:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeModeEnum'
      required:
      - container_path
      - name
    VolumeRequestModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - READ_ONLY
        * `READ_WRITE` - READ_WRITE
    VolumeRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        container_path:
          type: string
          minLength: 1
          maxLength: 255
        host_path:
          type: string
          minLength: 1
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeRequestModeEnum'
      required:
      - container_path
    WebhookDockerDeployServiceCleanupQueueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue
          type: string
          description: '* `cleanup_queue` - cleanup_queue'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookDockerDeployServiceCommitMessageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - commit_message
          type: string
          description: '* `commit_message` - commit_message'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookDockerDeployServiceError:
      oneOf:
      - $ref: '#/components/schemas/WebhookDockerDeployServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/WebhookDockerDeployServiceCommitMessageErrorComponent'
      - $ref: '#/components/schemas/WebhookDockerDeployServiceNewImageErrorComponent'
      - $ref: '#/components/schemas/WebhookDockerDeployServiceCleanupQueueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/WebhookDockerDeployServiceNonFieldErrorsErrorComponent'
          commit_message: '#/components/schemas/WebhookDockerDeployServiceCommitMessageErrorComponent'
          new_image: '#/components/schemas/WebhookDockerDeployServiceNewImageErrorComponent'
          cleanup_queue: '#/components/schemas/WebhookDockerDeployServiceCleanupQueueErrorComponent'
    WebhookDockerDeployServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/WebhookDockerDeployServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/WebhookDockerDeployServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    WebhookDockerDeployServiceNewImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_image
          type: string
          description: '* `new_image` - new_image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookDockerDeployServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookDockerDeployServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/WebhookDockerDeployServiceError'
      required:
      - errors
      - type
    WebhookGitDeployServiceCleanupQueueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cleanup_queue
          type: string
          description: '* `cleanup_queue` - cleanup_queue'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookGitDeployServiceCommitShaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - commit_sha
          type: string
          description: '* `commit_sha` - commit_sha'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookGitDeployServiceError:
      oneOf:
      - $ref: '#/components/schemas/WebhookGitDeployServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/WebhookGitDeployServiceIgnoreBuildCacheErrorComponent'
      - $ref: '#/components/schemas/WebhookGitDeployServiceCommitShaErrorComponent'
      - $ref: '#/components/schemas/WebhookGitDeployServiceCleanupQueueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/WebhookGitDeployServiceNonFieldErrorsErrorComponent'
          ignore_build_cache: '#/components/schemas/WebhookGitDeployServiceIgnoreBuildCacheErrorComponent'
          commit_sha: '#/components/schemas/WebhookGitDeployServiceCommitShaErrorComponent'
          cleanup_queue: '#/components/schemas/WebhookGitDeployServiceCleanupQueueErrorComponent'
    WebhookGitDeployServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/WebhookGitDeployServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/WebhookGitDeployServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    WebhookGitDeployServiceIgnoreBuildCacheErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ignore_build_cache
          type: string
          description: '* `ignore_build_cache` - ignore_build_cache'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookGitDeployServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookGitDeployServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/WebhookGitDeployServiceError'
      required:
      - errors
      - type
    WebhookTriggerPreviewEnvBranchNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - branch_name
          type: string
          description: '* `branch_name` - branch_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookTriggerPreviewEnvCommitShaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - commit_sha
          type: string
          description: '* `commit_sha` - commit_sha'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookTriggerPreviewEnvError:
      oneOf:
      - $ref: '#/components/schemas/WebhookTriggerPreviewEnvNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/WebhookTriggerPreviewEnvBranchNameErrorComponent'
      - $ref: '#/components/schemas/WebhookTriggerPreviewEnvCommitShaErrorComponent'
      - $ref: '#/components/schemas/WebhookTriggerPreviewEnvTemplateErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/WebhookTriggerPreviewEnvNonFieldErrorsErrorComponent'
          branch_name: '#/components/schemas/WebhookTriggerPreviewEnvBranchNameErrorComponent'
          commit_sha: '#/components/schemas/WebhookTriggerPreviewEnvCommitShaErrorComponent'
          template: '#/components/schemas/WebhookTriggerPreviewEnvTemplateErrorComponent'
    WebhookTriggerPreviewEnvErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/WebhookTriggerPreviewEnvValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/WebhookTriggerPreviewEnvValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    WebhookTriggerPreviewEnvNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookTriggerPreviewEnvTemplateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - template
          type: string
          description: '* `template` - template'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    WebhookTriggerPreviewEnvValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/WebhookTriggerPreviewEnvError'
      required:
      - errors
      - type
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: https://lab.fkiss.me/
