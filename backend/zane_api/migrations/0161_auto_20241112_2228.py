# Generated by Django 5.0.4 on 2024-11-12 22:28
import re
from django.db import migrations
from django.db.models import Q

# Regex pattern to match ANSI color codes
ANSI_ESCAPE_PATTERN = re.compile(r"\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])")


def clean_content(content):
    if isinstance(content, str):
        # Convert the JSON dict to a string and remove ANSI color codes
        content_str = str(content)
        content_cleaned = ANSI_ESCAPE_PATTERN.sub("", content_str)
        return content_cleaned
    return None


def populate_content_text(apps, schema_editor):
    SimpleLog = apps.get_model("zane_api", "SimpleLog")

    # Update each row's content_text with a string representation of the content
    for log in SimpleLog.objects.filter(~Q(source="PROXY")):
        if log.content is not None:
            log.content_text = clean_content(log.content)
            log.save(update_fields=["content_text"])


def clear_content_text(apps, schema_editor):
    SimpleLog = apps.get_model("zane_api", "SimpleLog")

    # Clear the content_text field (or set to None)
    SimpleLog.objects.update(content_text=None)


class Migration(migrations.Migration):

    dependencies = [
        ("zane_api", "0160_simplelog_content_text"),
    ]

    operations = [
        migrations.RunPython(
            populate_content_text,
            reverse_code=clear_content_text,  # This clears content_text when rolling back
        ),
    ]
