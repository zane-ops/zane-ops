# Generated by Django 5.2 on 2025-05-18 22:38

import base64
import hashlib
from django.db import migrations
from django.conf import settings


def generate_fingerprint(public_key: str) -> str:
    # Read the OpenSSH‚Äêformatted public key and extract the Base64 blob
    key_blob = public_key.strip().split()[1]

    # Decode the blob, hash it with SHA-256, then Base64-encode without padding
    blob = base64.b64decode(key_blob)
    digest = hashlib.sha256(blob).digest()
    fingerprint = base64.b64encode(digest).rstrip(b"=").decode("ascii")

    return f"SHA256:{fingerprint}"


def create_ssh_key_fingerprint(apps, schema_editor):
    # we don't want to migrate data in tests because they are always done fresh
    if settings.TESTING:
        return

    SSHKey = apps.get_model("webshell", "SSHKey")

    # Clear the content_text field (or set to None)
    for key in SSHKey.objects.all():
        key.fingerprint = generate_fingerprint(key.public_key)
        key.save()


def revert_ssh_key_fingerprint(apps, schema_editor):
    SSHKey = apps.get_model("webshell", "SSHKey")

    SSHKey.objects.update(fingerprint=None)


class Migration(migrations.Migration):
    dependencies = [
        ("zane_api", "0234_service_railpack_builder_options_and_more"),
    ]

    operations = [
        migrations.RunPython(
            create_ssh_key_fingerprint,
            reverse_code=revert_ssh_key_fingerprint,
        ),
    ]
