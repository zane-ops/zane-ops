# Generated by Django 5.2 on 2025-08-24 21:57

from django.db import migrations


def create_initial_project_memberships(apps, schema_editor):
    """Create ProjectMembership entries for existing project owners"""
    Project = apps.get_model('zane_api', 'Project')
    ProjectMembership = apps.get_model('zane_api', 'ProjectMembership')
    User = apps.get_model('auth', 'User')
    
    # Get the UserRole choices (can't import the model directly in migrations)
    ADMIN = 'ADMIN'
    
    created_count = 0
    
    for project in Project.objects.all():
        if project.owner:
            # Create membership for project owner as ADMIN
            membership, created = ProjectMembership.objects.get_or_create(
                user=project.owner,
                project=project,
                defaults={
                    'role': ADMIN,
                    'added_by': project.owner
                }
            )
            if created:
                created_count += 1
    
    print(f"Created {created_count} project memberships for existing project owners")


def reverse_project_memberships(apps, schema_editor):
    """Remove all project memberships (reverse migration)"""
    ProjectMembership = apps.get_model('zane_api', 'ProjectMembership')
    ProjectMembership.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("zane_api", "0284_apitoken_projectmembership_userinvitation"),
    ]

    operations = [
        migrations.RunPython(
            create_initial_project_memberships,
            reverse_project_memberships
        ),
    ]
